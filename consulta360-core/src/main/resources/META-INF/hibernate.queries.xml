<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <sql-query name="obtenerDatosUsuarioInterno">
        <![CDATA[
            SELECT  lower(usuario_login)                        as "usuario",
                    lower(nit)                                  as "nit",
                    initcap(sat_rtu.pprtu_cambianombre(nombre)) as "nombre"
            FROM    rh_catalogo_usuarios_prosis
            WHERE   upper(usuario_login)=upper(:pLogin)
            OR      upper(nit)=upper(:pLogin)
        ]]>
    </sql-query>
    
    <sql-query name="obtenerDatosUsuarioExterno">
        <![CDATA[
            SELECT  'Invitado'                                  as "usuario",
                    lower(nit)                                  as "nit",
                    initcap(sat_rtu.pprtu_cambianombre(nombre)) as "nombre"
            FROM    sat_contribuyentes
            WHERE   nit= upper(:pLogin)
        ]]>
    </sql-query>
	
    <sql-query name="obtenerContribuyenteByNit">
        <![CDATA[
            SELECT  nit                                                   as "nitContribuyente",
                    SAT_RTU.PPRTU_CAMBIANOMBRE(nombre)                    as "nombreContribuyente"
            FROM    sat_contribuyentes
            WHERE   nit= :pNit
        ]]>
    </sql-query>
    
    <sql-query name="obtenerDeclaracionesByNitAndFechasAndFormulario">
        <![CDATA[
            SELECT      p.numero_formulario||p.modulo     as "numeroFormulario",
                        to_char(p.no_acceso)              as "numeroAcceso",
                        s.nombre_formulario               as "nombreFormulario",
                        s.origen                          as "origen",
                        s.fecha_recaudo                   as "fechaRecaudo",
                        s.fecha_del                       as "fechaDel",
                        s.fecha_al                        as "fechaAl",
                        s.monto                           as "monto"
            FROM        dg_declaracion p
            INNER JOIN  (
                            SELECT      to_char(a.numero_formulario)                    numero_formulario,
                                        f.nombre_corto                                  nombre_formulario,
                                        decode  (
                                                    o.codigo_origen,
                                                    '',
                                                    'Presentada En Bancos',
                                                    initcap(o.descripcion_origen)
                                                )                                       origen,
                                        to_char(a.fecha_recaudo,'dd/MM/yyyy')           fecha_recaudo,
                                        to_char(a.periodo_desde,'dd/MM/yyyy')           fecha_del,
                                        to_char(a.periodo_hasta,'dd/MM/yyyy')           fecha_al,
                                        to_char(a.valor_pago,'99G999G999G999G990D00')   monto
                            FROM        ba_declaraciones a
                            INNER JOIN  ba_formularios f ON f.codigo_formulario = a.codigo_formulario
                            INNER JOIN  ba_versiones_formularios v ON v.numero_version = a.numero_version AND v.codigo_formulario = a.codigo_formulario
                            RIGHT JOIN  ba_origenes_declaracion o ON o.codigo_origen = a.codigo_origen
                            WHERE       a.nit = :pNit
                            AND         (a.status='C' AND o.codigo_origen=4)
                            AND         trunc(a.periodo_desde) BETWEEN to_date(:pFechaDel,'dd/MM/yyyy') AND to_date(:pFechaAl,'dd/MM/yyyy')
                            AND         trunc(a.periodo_hasta) BETWEEN to_date(:pFechaDel,'dd/MM/yyyy') AND to_date(:pFechaAl,'dd/MM/yyyy')
                            AND         v.presentado_eservicios IN ('S','X')
                            AND         a.codigo_formulario= :pCodFormulario
                        ) s ON (p.tipo_formulario||p.numero_version||p.numero_formulario||p.modulo)=s.numero_formulario
            WHERE       p.nit= :pNit
            UNION
            SELECT      to_char(a.numero_formulario),
                        null,
                        f.nombre_corto,
                        decode(
                                o.codigo_origen,
                                '',
                                'Presentada En Bancos',
                                initcap(o.descripcion_origen)
                              ),
                        to_char(a.fecha_recaudo,'dd/MM/yyyy'),
                        to_char(a.periodo_desde,'dd/MM/yyyy'),
                        to_char(a.periodo_hasta,'dd/MM/yyyy'),
                        to_char(a.valor_pago,'99G999G999G999G990D00')
            FROM        ba_declaraciones a
            INNER JOIN  ba_formularios f ON f.codigo_formulario = a.codigo_formulario
            INNER JOIN  ba_versiones_formularios v ON v.numero_version = a.numero_version AND v.codigo_formulario = a.codigo_formulario
            RIGHT JOIN  ba_origenes_declaracion o ON o.codigo_origen = a.codigo_origen
            WHERE       a.nit = :pNit
            AND         o.codigo_origen<>4
            AND         trunc(a.periodo_desde) BETWEEN to_date(:pFechaDel,'dd/MM/yyyy') AND to_date(:pFechaAl,'dd/MM/yyyy')
            AND         trunc(a.periodo_hasta) BETWEEN to_date(:pFechaDel,'dd/MM/yyyy') AND to_date(:pFechaAl,'dd/MM/yyyy')
            AND         v.presentado_eservicios IN ('S','X')
            AND         a.codigo_formulario= :pCodFormulario
            ORDER BY    3
        ]]>
    </sql-query>
    
    <sql-query name="obtenerDeclaracionesByNitAndFechas">
        <![CDATA[
            SELECT      p.numero_formulario||p.modulo     as "numeroFormulario",
                        to_char(p.no_acceso)              as "numeroAcceso",
                        s.nombre_formulario               as "nombreFormulario",
                        s.origen                          as "origen",
                        s.fecha_recaudo                   as "fechaRecaudo",
                        s.fecha_del                       as "fechaDel",
                        s.fecha_al                        as "fechaAl",
                        s.monto                           as "monto"
            FROM        dg_declaracion p
            INNER JOIN  (
                            SELECT      to_char(a.numero_formulario)                    numero_formulario,
                                        f.nombre_corto                                  nombre_formulario,
                                        decode  (
                                                    o.codigo_origen,
                                                    '',
                                                    'Presentada En Bancos',
                                                    initcap(o.descripcion_origen)
                                                )                                       origen,
                                        to_char(a.fecha_recaudo,'dd/MM/yyyy')           fecha_recaudo,
                                        to_char(a.periodo_desde,'dd/MM/yyyy')           fecha_del,
                                        to_char(a.periodo_hasta,'dd/MM/yyyy')           fecha_al,
                                        to_char(a.valor_pago,'99G999G999G999G990D00')   monto
                            FROM        ba_declaraciones a
                            INNER JOIN  ba_formularios f ON f.codigo_formulario = a.codigo_formulario
                            INNER JOIN  ba_versiones_formularios v ON v.numero_version = a.numero_version AND v.codigo_formulario = a.codigo_formulario
                            RIGHT JOIN  ba_origenes_declaracion o ON o.codigo_origen = a.codigo_origen
                            WHERE       a.nit = :pNit
                            AND         (a.status='C' AND o.codigo_origen=4)
                            AND         trunc(a.periodo_desde) BETWEEN to_date(:pFechaDel,'dd/MM/yyyy') AND to_date(:pFechaAl,'dd/MM/yyyy')
                            AND         trunc(a.periodo_hasta) BETWEEN to_date(:pFechaDel,'dd/MM/yyyy') AND to_date(:pFechaAl,'dd/MM/yyyy')
                            AND         v.presentado_eservicios IN ('S','X')
                        ) s ON (p.tipo_formulario||p.numero_version||p.numero_formulario||p.modulo)=s.numero_formulario
            WHERE       p.nit= :pNit
            UNION
            SELECT      to_char(a.numero_formulario),
                        null,
                        f.nombre_corto,
                        decode(
                                o.codigo_origen,
                                '',
                                'Presentada En Bancos',
                                initcap(o.descripcion_origen)
                              ),
                        to_char(a.fecha_recaudo,'dd/MM/yyyy'),
                        to_char(a.periodo_desde,'dd/MM/yyyy'),
                        to_char(a.periodo_hasta,'dd/MM/yyyy'),
                        to_char(a.valor_pago,'99G999G999G999G990D00')
            FROM        ba_declaraciones a
            INNER JOIN  ba_formularios f ON f.codigo_formulario = a.codigo_formulario
            INNER JOIN  ba_versiones_formularios v ON v.numero_version = a.numero_version AND v.codigo_formulario = a.codigo_formulario
            RIGHT JOIN  ba_origenes_declaracion o ON o.codigo_origen = a.codigo_origen
            WHERE       a.nit = :pNit
            AND         o.codigo_origen<>4
            AND         trunc(a.periodo_desde) BETWEEN to_date(:pFechaDel,'dd/MM/yyyy') AND to_date(:pFechaAl,'dd/MM/yyyy')
            AND         trunc(a.periodo_hasta) BETWEEN to_date(:pFechaDel,'dd/MM/yyyy') AND to_date(:pFechaAl,'dd/MM/yyyy')
            AND         v.presentado_eservicios IN ('S','X')
            ORDER BY    3
        ]]>
    </sql-query>
    
    <sql-query name="obtenerLibrosAutorizadosByNit">
        <![CDATA[
            SELECT      to_char(a.fecha_autorizacion,'dd/MM/yyyy')                                                  as "fechaAutorizacion", 
                        a.ano_autorizacion||'-'||a.codigo_tipo_ente||'-'||a.codigo_ente||'-'||a.numero_autorizacion as "noResolucionAutorizacion",
                        initcap(t.descripcion)                                                                      as "descripcion",
                        decode(a.tipo_libro,'M','Manual','Computarizado')                                           as "tipoLibro",
                        to_char(a.numero_hojas)                                                                     as "numeroHojas",
                        decode(a.status,'A','Activo','V','Inactivo Temporal','Inactivo')                            as "estado"
            FROM        aut_libros a, 
                        aut_tipos_autorizacion t
            WHERE       a.nit = :pNit
            AND         NVL(a.numero_establecimiento,0)= 0
            AND         t.codigo_catalogo = a.codigo_catalogo  
            AND         t.codigo_tipo = a.codigo_tipo  
            ORDER BY    a.fecha_autorizacion DESC
        ]]>
    </sql-query>
    
    <sql-query name="obtenerAfiliacionesByNit">
        <![CDATA[
            SELECT      initcap(imp.nombre_impuesto)            as "nombreImpuesto",
                        initcap(rr.nombre_regimen)              as "nombreRegimen",
                        initcap(rpi.nombre_periodo)             as "nombrePeriodo",
                        to_char(a.codigo_impuesto)              as "codigoImpuesto",
                        to_char(a.codigo_tipo)                  as "codigoTipo",
                        to_char(a.fecha_status,'dd/MM/yyyy')    as "fechaAfiliacion"
            FROM        rtu_afiliaciones a,
                        ba_impuestos imp,
                        rtu_regimenes rr,
                        rtu_periodos_impositivos rpi
            WHERE       a.nit= :pNit
            AND         imp.codigo_impuesto = a.codigo_impuesto
            AND         rr.codigo_regimen   = a.codigo_regimen 
            AND         rr.codigo_impuesto  = a.codigo_impuesto
            AND         rr.codigo_tipo      = a.codigo_tipo 
            AND         rpi.codigo_periodo  = a.codigo_periodo
            AND         a.status = 'A'
            ORDER BY    1,2
        ]]>
    </sql-query>
    
    <sql-query name="obtenerTipologiasEvasionByNit">
        <![CDATA[
            SELECT  a.ID                      as "Id",  
                    a.ID_TIPOLOGIA            as "IdTipologia",
                    b.TIPOLOGIA               as "Tipologia",
                    a.NIT                     as "Nit",
                    a.REFERENCIA              as "Referencia",
                    a.FECHA_REGISTRO          as "FechaRegistro",
                    a.DESCRIPCION_TIPOLOGIA   as "DescripcionTipologia",
                    a.ANIO_INFORMACION        as "AnioInformacion",
                    a.INDICADOR               as "Indicador",
                    a.COLOR_INDICADOR         as "ColorIndicador",
                    COALESCE(a.MONTO_DISCREPANCIA,0)  as "MontoDiscrepancia",
                    a.DEPENDENCIA             as "Dependencia",
                    a.ESTADO                  as "Estado",
                    a.FECHA_ESTADO            as "FechaEstado",
                    a.OBSERVACIONES_ESTADO    as "ObservacionesEstado"
            FROM    CIF_TIPOLOGIAS_DE_EVASION a INNER JOIN CIF_CLASES_TIPOLOGIAS b
                    ON a.ID_TIPOLOGIA = b.ID_TIPOLOGIA
            WHERE   a.NIT= :pNit
            AND     a.ESTADO = 'A'
            ORDER BY 1
        ]]>
    </sql-query> 
    
    <sql-query name="obtenerTipologiasEvasionAnualByNit">
        <![CDATA[
            SELECT EXTRACT(YEAR FROM FECHA_REGISTRO) AS "nombreAnio",  
                   COUNT(FECHA_REGISTRO)             AS "cantidadAnios"
            FROM   CIF_TIPOLOGIAS_DE_EVASION
            WHERE  NIT = :pNit
            AND    ESTADO = 'A'
            GROUP BY EXTRACT(YEAR FROM FECHA_REGISTRO)
            ORDER BY 1
        ]]>
    </sql-query> 
    
    <sql-query name="obtenerVerificacionesByNit">
        <![CDATA[
            SELECT 
                    ID                              as "Id",
                    NIT                             as "Nit", 
                    CONTRIBUYENTE                   as "Contribuyente", 
                    DIRECCION_VERIFICADA            as "DireccionVerificada", 
                    DEPARTAMENTO                    as "Departamento", 
                    MUNICIPIO                       as "Municipio", 
                    LONGITUD                        as "Longitud", 
                    LATITUD                         as "Latitud", 
                    TIPO_DIRECCION                  as "TipoDireccion", 
                    ESTADO_DIRECCION                as "EstadoDireccion", 
                    FUENTE_DE_INFORMACION           as "FuenteDeInformacion", 
                    ESTIMACION_CAPACIDAD_INSTALADA  as "EstimacionCapacidadInstalada", 
                    CONTADOR_ENERGIA_ELECTRICA      as "ContadorEnergiaElectrica", 
                    REFERENCIA_VERIFICACION         as "ReferenciaVerificacion", 
                    RESPONSABLE_DE_LA_VERIFICACION  as "ResponsableDeLaVerificacion", 
                    ESTADO_REGISTRO                 as "EstadoRegistro", 
                    FECHA_CREACION                  as "FechaCreacion"
            FROM    CIF_VERIFICACIONES_EN_CAMPO
            WHERE   NIT = :pNit 
            AND ESTADO_REGISTRO='A'
        ]]>
    </sql-query>          
  
    <sql-query name="obtenerVerificacionesConteoByNit">
        <![CDATA[
            SELECT  
                    ESTADO_DIRECCION    as "estados",
                    COUNT(*)            as "cantidadRegistros"
            FROM    CIF_VERIFICACIONES_EN_CAMPO
            WHERE   NIT = :pNit 
            AND     ESTADO_REGISTRO='A'
            GROUP BY ESTADO_DIRECCION
        ]]>
    </sql-query> 
      
    <sql-query name="obtenerObligacionesByAfiliacionAndNit">
        <![CDATA[
            SELECT      initcap(ob.nombre_obligacion)                           as "nombreObligacion",
                        initcap(rfp.nombre_frecuencia)                          as "frecuenciaPago",
                        bf.codigo_formulario||' - '||initcap(bf.nombre_corto)   as "numeroFormulario",
                        rfc.nombre_calculo                                      as "formaCalculo"
            FROM        rtu_obligaciones_contribuyente roc,
                        rtu_obligaciones ob,
                        rtu_frecuencias_pagos rfp,
                        ba_formularios bf,
                        rtu_formas_calculos rfc
            WHERE       roc.nit= :pNit 
            AND         roc.codigo_impuesto        = :pCodigoImpuesto
            AND         roc.codigo_tipo            = :pCodigoTipo
            AND         roc.codigo_impuesto        = ob.codigo_impuesto
            AND         roc.codigo_regimen         = ob.codigo_regimen
            AND         roc.codigo_tipo            = ob.codigo_tipo
            AND         roc.correlativo_obligacion = ob.correlativo_obligacion
            AND         ob.codigo_frecuencia       = rfp.codigo_frecuencia
            AND         ob.codigo_formulario       = bf.codigo_formulario
            AND         ob.status='A'
            AND         roc.codigo_calculo=rfc.codigo_calculo (+)
            ORDER BY    1
        ]]>
    </sql-query>
    
    <sql-query name="obtenerEstablecimientosByNit">
        <![CDATA[
            SELECT      to_char(re.numero_establecimiento) as "numeroEstablecimiento",
                        UPPER(re.nombre_comercial) as "nombreEstablecimiento",
                        UPPER(re.calle_avenida||' '||re.numero_casa||' '||re.letra||' '||re.apartamento||' '||DECODE(re.zona,NULL,'','Zona '||re.zona)||' '||re.colonia||' '||mu.nombre_municipio||' '||de.nombre_departamento) as "direccion",
                        DECODE(re.STATUS,'A','Activo',DECODE(re.status,'V','Inactivacion Temporal',DECODE(re.status,'C','Cancelado','Duplicado'))) as "estado"
            FROM        rtu_establecimientos re,        
                        rtu_actividades_contribuyentes rac, 
                        sat_departamentos de,   
                        sat_municipios mu  
            WHERE       re.nit = :pNit
            AND         re.codigo_actividad = rac.codigo_actividad(+)
            AND         re.codigo_departamento = de.codigo_departamento
            AND         re.codigo_departamento = mu.codigo_departamento
            AND         re.codigo_municipio    = mu.codigo_municipio
            ORDER BY    re.numero_establecimiento
        ]]>
    </sql-query>
    
    <sql-query name="obtenerDocumentosByNitAndEstablecimiento">
        <![CDATA[
            SELECT      to_char(a.fecha_autorizacion,'dd/mm/rrrr')                                                      as "fechaAutorizacion",
                        a.ano_autorizacion||'-'||a.codigo_tipo_ente||'-'||a.codigo_ente||'-'||a.numero_autorizacion     as "numeroResolucion",
                        INITCAP(t.descripcion)                                                                          as "tipoDocumento",
                        a.numero_serie                                                                                  as "serie",
                        to_char(a.numeracion_inicial)                                                                   as "numeroInicial",
                        to_char(a.numeracion_final)                                                                     as "numeroFinal",
                        to_char(a.total_documentos)                                                                     as "total",
                        DECODE(a.status,'A','Activo','V','Inactivo Temporal','Inactivo')                                as "estadoResolucion"
            FROM        aut_documentos a,
                        aut_tipos_autorizacion t
            WHERE       a.codigo_catalogo=t.codigo_catalogo
            AND         a.codigo_tipo=t.codigo_tipo
            AND         a.nit= :pNit 
            AND         a.numero_establecimiento = :pNoEstablecimiento
            ORDER BY    a.fecha_autorizacion DESC
        ]]>
    </sql-query>
    
    <sql-query name="obtenerMaquinasByNitAndEstablecimiento">
        <![CDATA[
            SELECT      to_char(a.fecha_autorizacion,'dd/mm/rrrr')                                                  as "fechaAutorizacion",
                        a.ano_autorizacion||'-'||a.codigo_tipo_ente||'-'||a.codigo_ente||'-'||a.numero_autorizacion as "numeroResolucion",
                        initcap(a.marca)                                                                            as "marca",
                        a.modelo                                                                                    as "modelo", 
                        a.num_serie_maquina                                                                         as "numeroSerie", 
                        to_char(a.no_terminales)                                                                    as "numeroTerminales",
                        decode(a.status,'A','Activa','Cancelada')                                                   as "estadoMaquina", 
                        decode(a.aut_status,'A','Activo','Inactivo')                                                as "estadoImpresor"
            FROM        aut_maquinas a
            WHERE       a.nit = :pNit
            AND         a.numero_establecimiento= :pNoEstablecimiento
            ORDER BY    a.fecha_autorizacion DESC
        ]]>
    </sql-query>
    
    <sql-query name="obtenerLibrosByNitAndEstablecimiento">
        <![CDATA[
            SELECT      to_char(a.fecha_autorizacion,'dd/mm/yyyy')                                                  as "fechaAutorizacion",
                        a.ano_autorizacion||'-'||a.codigo_tipo_ente||'-'||a.codigo_ente||'-'||a.numero_autorizacion as "noResolucionAutorizacion",
                        initcap(t.descripcion)                                                                      as "descripcion",  
                        decode(a.tipo_libro,'M','Manual','Computarizado')                                           as "tipoLibro", 
                        to_char(a.numero_hojas)                                                                     as "numeroHojas",  
                        decode(a.status,'A','Activo','V','Inactivo Temporal','Inactivo')                            as "estado"
            FROM        aut_libros a, 
                        aut_tipos_autorizacion t  
            WHERE       a.nit = :pNit  
            AND         NVL(a.numero_establecimiento,0)= :pNoEstablecimiento  
            AND         t.codigo_catalogo = a.codigo_catalogo  
            AND         t.codigo_tipo = a.codigo_tipo   
            ORDER BY    a.fecha_autorizacion DESC
        ]]>
    </sql-query>
    
    <sql-query name="obtenerLineasAereasByNitAndEstablecimiento">
        <![CDATA[
            SELECT      to_char(a.fecha_autorizacion,'dd/mm/yyyy')                                                  as "fechaAutorizacion", 
                        a.ano_autorizacion||'-'||a.codigo_tipo_ente||'-'||a.codigo_ente||'-'||a.numero_autorizacion as "noResolucionAutorizacion",
                        initcap(t.descripcion)                                                                      as "descripcion", 
                        a.numero_serie                                                                              as "serie",  
                        to_char(a.numeracion_inicial)                                                               as "numeracionInicial",  
                        to_char(a.numeracion_final)                                                                 as "numeracionFinal",
                        decode(a.status,'A','Activo','Inactivo')                                                    as "estado"
            FROM        aut_lineas_aereas a, 
                        aut_tipos_autorizacion t  
            WHERE       a.nit = :pNit  
            AND         a.numero_establecimiento= :pNoEstablecimiento
            AND         t.codigo_catalogo = a.codigo_catalogo  
            AND         t.codigo_tipo = a.codigo_tipo  
            ORDER BY    a.fecha_autorizacion DESC
        ]]>
    </sql-query>
    
    <sql-query name="obtenerNombramientosByNitAndDates">
        <![CDATA[
            SELECT      n.nombramiento                              as "nombramiento",
                        n.expediente                                as "expediente",
                        to_char(n.fecha_periodo_del,'dd/MM/yyyy')   as "periodoDel",
                        to_char(n.fecha_periodo_al,'dd/MM/yyyy')    as "periodoAl",
                        to_char(n.fecha_emision,'dd/MM/yyyy')       as "fechaEmision",
                        n.nombre_plan                               as "nombrePlan",
                        fip.nombre_etapa                            as "estadoNombramiento"
            FROM        fg_nombramientos n
            INNER JOIN  fg_bitacoras b 
                        ON n.nombramiento=b.nombramiento
            INNER JOIN  fi_etapa_procedimiento fip
                        ON fip.codigo_proc=b.codigo_proc 
                        AND fip.codigo_ver_proc=b.codigo_ver_proc 
                        AND fip.codigo_etapa=b.codigo_etapa
            INNER JOIN  (
                            SELECT      bitacora.nombramiento,
                                        MAX(bitacora.fecha) ultima_fecha
                            FROM        fg_bitacoras bitacora
                            GROUP BY    bitacora.nombramiento
                        ) etapa 
                        ON b.nombramiento=etapa.nombramiento 
                        AND b.fecha=etapa.ultima_fecha
            WHERE       n.nit = :pNit
            AND         n.codigo_estado <=30
            AND         (n.generado='APA' OR n.generado IS NULL)
            AND         n.fecha_emision BETWEEN to_date(:pFechaInicio,'dd/MM/yyyy') AND to_date(:pFechaFin,'dd/MM/yyyy')
            ORDER BY    n.fecha_emision DESC
        ]]>
    </sql-query>
    
    <sql-query name="existeInformeBanguatActivo">
        <![CDATA[ 
            SELECT  count(1)
            FROM    FG_NOMBRAMIENTOS n,
                    fi_contribuyentes c,
                    fg_devolucion_credito_fiscal d,
                    fg_origen o
            WHERE   n.NOMBRAMIENTO= :pNombramiento
            AND     n.nit=c.nit
            AND     n.nombramiento = d.nombramiento
            AND     n.codigo_origen = o.codigo_origen
            AND     d.regimen='E'
            AND     d.TIPO_DOCUMENTO='I'
            AND     d.ESTADO='A'
        ]]>
    </sql-query>
    
    <sql-query name="existeResolucionFiscalActiva">
        <![CDATA[ 
            SELECT  count(1)
            FROM    fg_nombramientos no,
                    fg_devolucion_credito_fiscal dc,
                    fg_origen org,
                    fi_contribuyentes fc,
                    fi_municipio m,
                    fi_departamento d
            WHERE   no.nombramiento= :pNombramiento
            AND     dc.nombramiento=no.nombramiento
            AND	    org.codigo_origen=no.codigo_origen
            AND	    no.nit=fc.nit
            AND     m.codigo_departamento = d.codigo_departamento
            AND     m.codigo_departamento = dc.codigo_departamento
            AND     m.codigo_municipio = dc.codigo_municipio
            AND     dc.estado='A'
        ]]>
    </sql-query>
    
    <sql-query name="contarAudienciaByNombramiento">
        <![CDATA[ 
            SELECT  count(1)
            FROM    FG_AUDIENCIAS
            WHERE   nombramiento = :pNombramiento
            AND     estado = 'A'
        ]]>
    </sql-query>
    
    <sql-query name="contarInformesByNombramiento">
        <![CDATA[ 
            SELECT  count(1)
            FROM    fg_informe
            WHERE   nombramiento = :pNombramiento
            AND     estado = 'A'
        ]]>
    </sql-query>
    
    <sql-query name="findNoInforme">
        <![CDATA[ 
            SELECT  inf.informe
            FROM    fg_informe inf
            WHERE   inf.nombramiento= :pNombramiento
            AND     inf.estado = 'A'
        ]]>
    </sql-query>
    
    <sql-query name="obtenerEncabezadoNombramiento">
        <![CDATA[ 
            SELECT      a.nombramiento                                              as "nombramiento",
                        a.nombre_plan                                               as "numeroPrograma",
                        p.nombre_corto                                              as "nombrePrograma",
                        replace(con.NOMBRE, ',',' ')                                as "nombreResponsable",
                        fi_no_expediente(a.expediente, a.fecha_emision)             as "expediente",
                        a.nit                                                       as "nit",
                        c.nombre_legal                                              as "nombreLegal",                       
                        (   
                            SELECT      p.nombre
                            FROM        fg_nombramientos a
                            INNER JOIN  adm_personas p ON p.login=a.jefe_seccion
                            WHERE       a.nombramiento= :pNombramiento
                        )                                                           as "jefeSeccion",
                        e.descripcion                                               as "estadoNombramiento",
                        to_char(nvl(a.dias_asignados,0))                            as "diasAsignados"                        
            FROM        fg_nombramientos a
            INNER JOIN  fi_contribuyentes c ON c.nit=a.nit
            INNER JOIN  fg_estados e ON e.codigo_estado=a.codigo_estado
            INNER JOIN  FG_PLANES_AUDITORIAS P ON(a.NOMBRE_PLAN=P.NOMBRE_PLAN)
            INNER JOIN  SAT_EXPEDIENTES.EX_EXPEDIENTE ex on(a.EXPEDIENTE= ex.NUMERO_EXPEDIENTE)
            INNER JOIN  SAT_GENERAL.SAT_CONTRIBUYENTES con on(ex.RESPO_ACTUAL_NIT = con.NIT)
            WHERE       a.nombramiento= :pNombramiento
        ]]>
    </sql-query>
    
    <sql-query name="obtenerSupervisoresAuditoresByNombramiento">
        <![CDATA[ 
            SELECT      trim(a.nombre)||decode(a.supervisor,'S',' (Supervisor)')    as "nombreAuditorSupervisor"
            FROM 	fg_asigna_auditores aa
            INNER JOIN  fg_auditores a ON a.nit_auditor=aa.nit_auditor
            WHERE 	aa.nombramiento= :pNombramiento
            ORDER BY 	a.supervisor DESC,a.nombre
        ]]>
    </sql-query>
    
    <sql-query name="obtenerTrayectoriaNombramiento">
        <![CDATA[ 
            SELECT      to_char(b.fecha,'DD/MM/YYYY HH:mi:ss')      as "fecha",
                        e.nombre_etapa                              as "etapa",
                        to_char(b.fecha_real,'DD/MM/YYYY HH:mi:ss') as "fechaReal",
                        b.obs                                       as "informacionEtapa"
            FROM 	fg_nombramientos a,
                        fg_bitacoras b,
                        fi_etapa_procedimiento e
            WHERE 	b.nombramiento= :pNombramiento
            AND		a.nombramiento=b.nombramiento
            AND		e.codigo_proc=b.codigo_proc
            AND		e.codigo_ver_proc=b.codigo_ver_proc
            AND		e.codigo_etapa=b.codigo_etapa
            AND		e.codigo_opcion=b.codigo_opcion
            ORDER BY    b.fecha DESC
        ]]>
    </sql-query>
    
    <sql-query name="obtenerExpedientesByNit">
        <![CDATA[ 
            SELECT      ex.numero_expediente                                    as "numeroExpediente",
                        SAT_RTU.PPRTU_CAMBIANOMBRE(con.nombre)                  as "nombreResponsable",
                        et.nombre_etapa                                         as "nombreEtapa",
                        TO_CHAR(ex.fecha_ingreso,'dd/MM/yyyy')                  as "fechaIngreso",
                        TO_CHAR(ex.periodo_inicial,'dd/MM/yyyy')                as "periodoInicial",
                        TO_CHAR(ex.periodo_final,'dd/MM/yyyy')                  as "periodoFinal"
            FROM        ex_expediente ex
            INNER JOIN  sat_contribuyentes con ON con.nit=ex.respo_actual_nit
            INNER JOIN  ex_etapas et ON et.numero_etapa=ex.etapa_actual
            WHERE       ex.nit= :pNit
            AND         ex.etapa_actual NOT IN (
                                                    '11010000','11010017','24010004','24010006','24010007',                                    
                                                    '24010008','24010009','24010010','24010011','11010007','24010012'
                                                )
            ORDER BY    ex.fecha_ingreso DESC
        ]]>
    </sql-query>
    
    <sql-query name="obtenerDocumentosByExpediente">
        <![CDATA[ 
            SELECT      n.tipo_documento||'-'||n.documento          as "documento",
                        t.descripcion                               as "tipoDocumento",
                        to_char(n.fecha_solicito,'dd/MM/yyyy')      as "fechaSolicito",
                        to_char(n.fecha_documento,'dd/MM/yyyy')     as "fechaDocumento",
                        to_char(n.fecha_notifico,'dd/MM/yyyy')      as "fechaNotifico"
            FROM        ex_notificacion n
            INNER JOIN  ex_edo_tipo t ON t.valor=n.tipo_documento
            WHERE       t.tabla='EX_NOTIFICACION'
            AND         t.atributo='TIPO_DOCUMENTO'
            AND         n.numero_expediente= :pNumeroExpediente
            ORDER BY    n.fecha_solicito
        ]]>
    </sql-query>
    
    <sql-query name="obtenerExpedientesJuridicoByNit">
        <![CDATA[ 
            SELECT      e.id_sgce                                                                       as "numeroExpediente", 
                        u.nombre_unidad                                                                 as "nombreUnidad",     
                        to_char(e.fecha_ingreso,'dd/MM/yyyy HH24:mi:ss')                                as "fechaIngreso",
                        to_char(ex.periodo_inicial,'dd/MM/yyyy')                                        as "periodoInicial",
                        to_char(ex.periodo_final,'dd/MM/yyyy')                                          as "periodoFinal",
                        mi.nombre_motivo_ingreso                                                        as "motivoIngreso",
                        r.nombre                                                                        as "nombreResponsable"
            FROM        SAT_SGEL.sgel_persona p
            INNER JOIN  SAT_SGEL.sgel_involucrado_expediente ie ON ie.id_persona=p.id_persona
            INNER JOIN  sgel_expediente e ON e.id_expediente=ie.id_expediente
            INNER JOIN  ex_expediente ex ON ex.numero_expediente=e.id_sgce
            INNER JOIN  SAT_SGEL.sgel_unidad u ON u.id_unidad=e.id_unidad_destino
            INNER JOIN  SAT_SGEL.sgel_involucrado_expediente ies ON ies.id_expediente=e.id_expediente
            INNER JOIN  SAT_SGEL.sgel_persona r ON r.id_persona=ies.id_persona
            INNER JOIN  sat_sgel.sgel_motivo_ingreso mi ON mi.id_motivo_ingreso=e.id_motivo_ingreso
            WHERE       p.no_identificacion= :pNit
            AND         e.fecha_ingreso BETWEEN to_date(:pFechaInicio,'dd/MM/yyyy') AND to_date(:pFechaFin,'dd/MM/yyyy')
            AND         e.id_tipo_expediente=2
            AND         e.id_estado=7
            AND         ies.id_rol_expediente=2
            AND         ies.id_estado=39
            ORDER BY    u.nombre_unidad, e.fecha_ingreso DESC
        ]]>
    </sql-query>
    
    <sql-query name="obtenerProveedoresByNitAndNombramiento">
        <![CDATA[ 
            SELECT      to_char(1)                                                      as "nivel",
                        d.nit_proveedor                                                 as "nitProveedor", 
                        c.nombre                                                        as "nombreProveedor",
                        (
                            SELECT  nombramiento
                            FROM    fi_resultados
                            WHERE   nit=d.nit_proveedor
                            AND     id_padre=   (
                                                    SELECT  id
                                                    FROM    fi_resultados
                                                    WHERE   nombramiento= :pNombramiento
                                                )
                        )                                                               as "nombramiento",
                        to_char(d.monto,'99G999G999G999G990D00')                        as "monto",
                        to_char(
                                    to_date(d.mes_periodo,'MM'),
                                    'MONTH',
                                    'NLS_DATE_LANGUAGE = SPANISH'
                                )                                                       as "mesPeriodo",
                        to_char(d.periodo_del,'mm')                                     as "numeroMesPeriodo",
                        to_char(d.anio_periodo)                                         as "anioPeriodo",
                        d.semaforo_perfil                                               as "semaforoPerfil",
                        d.semaforo                                                      as "semaforoDeclaracionIVA"
            FROM        fi_datos_cruce_detalle d
            INNER JOIN  sat_contribuyentes c ON c.nit=d.nit_proveedor
            WHERE       d.correlativo_cruce=    (
                                                    SELECT    correlativo_cruce 
                                                    FROM      fi_datos_cruce 
                                                    WHERE     nombramiento= :pNombramiento
                                                    AND       rownum<2
                                                )
            AND         d.nit= :pNit
            ORDER BY    d.anio_periodo, d.mes_periodo
        ]]>
    </sql-query>
    
    <sql-query name="obtenerDetalleProveedor">
        <![CDATA[ 
            SELECT  to_char(nvl(d.monto,0),'99G999G999G999G990D00')     as "monto", 
                    n.nombramiento                                      as "nombramiento", 
                    general.fnc_desglosa_documento(n.expediente,'EXP')  as "expediente"
            FROM    fi_datos_cruce f,
                    fi_datos_cruce_detalle d,
                    fg_nombramientos n
            WHERE   f.correlativo_cruce=d.correlativo_cruce
            AND     f.nit=d.nit
            AND     n.nombramiento=f.nombramiento
            AND     d.nit_proveedor= :pNitProveedor
            AND     d.anio_periodo = :pAnio
            AND     d.mes_periodo = :pMes
        ]]>
    </sql-query>
    
    <sql-query name="obtenerMontoDeclaradoByProveedor">
        <![CDATA[ 
            SELECT  to_char(nvl(SUM(NVL(VALOR_CAMPO,0)),0),'99G999G999G999G990D00') AS "montoDeclarado"
            FROM    BA_DET_DECLARACIONES
            WHERE   NUMERO_DOCUMENTO=:pNumeroDocumento
            AND     CODIGO_FORMULARIO in(201,215,223)
            AND     ANIO_FISCAL=:pAnioFiscal
            AND     NUMERO_CASILLA in (:casilla1, :casilla2)
        ]]>
    </sql-query>
    
    <sql-query name="obtenerPapelesTrabajoByNombramiento">
        <![CDATA[ 
            SELECT      I.IMPUESTO                                    AS "categoriaFormato",
                        F.CODIGO                                      AS "codigoFormato", 
                        F.NOMBRE                                      AS "nombreFormato",
                        TO_CHAR(FN.FECHA_INGRESO,'dd/MM/yyyy')        AS "fechaIngreso",
                        FN.DOCUMENTO                                  AS "binaryFile",
                        FN.URL                                        AS "nameFile"
            FROM        PAPELES_FORMATO_NOMBRAMIENTO FN,
                        PAPELES_FORMATO F, 
                        PAPELES_IMPUESTO I, 
                        PAPELES_ESTADO E
            WHERE       FN.ID_NOMBRAMIENTO=:pNombramiento 
            AND         FN.ID_FORMATO=F.ID_FORMATO 
            AND         FN.ESTADO=E.ID_ESTADO 
            AND         F.ID_IMPUESTO=I.ID_IMPUESTO 
            AND         E.VALOR=1
            AND         E.NOMBRE_TABLA='PAPELES_FORMATO_NOMBRAMIENTO'
            ORDER BY    I.IMPUESTO
        ]]>
    </sql-query>
    
    <sql-query name="findPerfilContribuyenteByNit">
        <![CDATA[
            SELECT      c.nit as "nit",
                        SAT_RTU.PPRTU_CAMBIANOMBRE(c.nombre) as "nombre",
                        tp.nombre_tipo as "personeriaJuridica",
                        rcc.descripcion as "clasificacion",
                        decode(c.fecha_fallecimiento,null,null,(to_char(c.fecha_fallecimiento, 'dd "de" ')||trim(to_char(c.fecha_fallecimiento, 'Month', 'NLS_DATE_LANGUAGE = SPANISH'))||to_char(c.fecha_fallecimiento, ' "de" yyyy'))) as "fechaFallecimiento",
                        ac.nombre_actividad as "actividadEconomica",
                        decode(c.status,'A','ACTIVO','B','BAJA TEMPORAL','C','CANCELADO','DUPLICADO') as "estado",
                        decode(count(ei.nit),0,'No','Sí') as "exento",
                        decode(c.fecha_nacimiento,null,null,(to_char(c.fecha_nacimiento, 'dd "de" ')||trim(to_char(c.fecha_nacimiento, 'Month', 'NLS_DATE_LANGUAGE = SPANISH'))||to_char(c.fecha_nacimiento, ' "de" yyyy'))) as "fechaNacConst",
                        decode(c.fecha_inscripcion,null,null,(to_char(c.fecha_inscripcion, 'dd "de" ')||trim(to_char(c.fecha_inscripcion, 'Month', 'NLS_DATE_LANGUAGE = SPANISH'))||to_char(c.fecha_inscripcion, ' "de" yyyy'))) as "fechaInscripcion",
                        FRTU_CONSTRUYE_DOMICILIO_FIS(c.nit) as "domicilioFiscal",
                        c.telefono as "telefono",
                        decode(cr.nombre,null,null,SAT_RTU.PPRTU_CAMBIANOMBRE(cr.nombre)) as "representanteLegal",
                        decode(cc.nombre,null,null,SAT_RTU.PPRTU_CAMBIANOMBRE(cc.nombre)) as "contadorActual",
                        trim(to_char(count(e.nit),'99G999G999G999G990')) as "negocios",
                        decode(count(ar.nit_agente_retenedor),0,'No','Sí') as "agenteRetencion",
                        decode(nvl(c.proveedor_estado,'N'),'S','Sí','N','No') as "proveedorEstado",
                        decode(count(pi.nit),0,'No','Sí') as "importadorRegistrado",
                        decode(count(eh.nit),0,'No','Sí') as "decreto2989",
                        (
                            SELECT  nvl(listagg(ezf.nombre_comercial,', ') WITHIN GROUP (ORDER BY ezf.nombre_comercial),'No')
                            FROM    rtu_establecimientos ezf
                            WHERE   ezf.nit=c.nit
                            AND     ezf.status='A'
                            AND     ezf.tipo_establecimiento='U'
                        ) as "usuarioZonaFranca",
                        decode(count(a.nit),0,'No','Sí') as "agenteAduanero",
                        (
                            SELECT  decode(count(1),0,'No','Sí')
                            FROM    rfi_registros rfi
                            WHERE   rfi.nit=c.nit
                            AND     rfi.status='A'
                        ) as "registroImprentas",
                        (
                            SELECT      trim(to_char(count(1),'99G999G999G999G990'))
                            FROM        veh_vehiculos v
                            INNER JOIN  veh_propiedades p ON p.anio_alza=v.anio_alza AND p.identificador=v.identificador AND p.digito_verificador=v.digito_verificador
                            WHERE       v.estatus='A'
                            AND         p.nit=:pNit
                        ) as "registroVehiculos",
                        decode(count(ex.nit),0,'No','Sí') as "exportador",
                        decode(count(o.nit),0,'No','Sí') as "omiso",
                        decode  (
                                    (
                                        SELECT  COUNT(1)
                                        FROM    (
                                                    SELECT  nit_usuario
                                                    FROM    sat_general.sat_en_linea_solicitudes
                                                    WHERE   estado_solicitud=3
                                                    AND     nit_usuario=:pNit
                                                    UNION
                                                    SELECT  nit
                                                    FROM    sat_general.av_usuario_migrado_901
                                                    WHERE   nit=:pNit
                                                )
                                    ),
                                    0,'No','Sí'
                                ) as "agenciaVirtual",
                        (
                            SELECT  *
                            FROM    (
                                        SELECT      INITCAP(ri.tipo_riesgo)
                                        FROM        riesgo_institucional ri
                                        WHERE       ri.nit=:pNit
                                        ORDER BY    ri.anio DESC, ri.fecha_grabacion desc NULLS LAST
                                    )
                            WHERE   rownum<2
                        ) as "tipoRiesgo",
                        (
                            SELECT  *
                            FROM    (
                                        SELECT      INITCAP(DECODE(ri.tipo_riesgo,'RIESGO NO DETERMINADO','RIESGO NO ESTABLECIDO',ri.tipo_riesgo))
                                        FROM        sat_general.dcf_riesgo_institucional ri
                                        WHERE       ri.nit=:pNit
                                        ORDER BY    ri.anio DESC,ri.fecha_grabacion desc NULLS LAST
                                    )
                            WHERE   rownum<2
                        ) as "tipoRiesgoDCF"
            FROM        sat_contribuyentes c
            LEFT JOIN   ba_tipos_personeria tp ON tp.codigo_tipo=c.codigo_tipo
            LEFT JOIN   rtu_catalogo_clasificaciones rcc ON rcc.codigo_clasificacion=c.clasificacion
            LEFT JOIN   rtu_actividades_contribuyentes ac ON ac.codigo_actividad=c.codigo_actividad
            LEFT JOIN   rtu_exoneraciones_impuestos ei ON ei.nit=c.nit AND ei.status='A'
            LEFT JOIN   sat_departamentos d ON d.codigo_departamento=c.codigo_departamento
            LEFT JOIN   sat_municipios m ON m.codigo_municipio=c.codigo_municipio AND m.codigo_departamento=c.codigo_departamento
            LEFT JOIN   rtu_representantes r ON r.nit_representado=c.nit AND r.status='A' AND r.principal='S'
            LEFT JOIN   sat_contribuyentes cr ON cr.nit=r.nit_representante
            LEFT JOIN   sat_contribuyentes cc ON cc.nit=c.nit_contador
            LEFT JOIN   rtu_establecimientos e ON e.nit=c.nit AND e.status='A'
            LEFT JOIN   sat_isr.isr_agente_r ar ON ar.nit_agente_retenedor=c.nit AND id_estado=380
            LEFT JOIN   ad_padron_importadores pi ON pi.nit=c.nit AND pi.estatus='II'
            LEFT JOIN   dev_exportadores_habituales eh ON eh.nit=c.nit AND eh.status='A' AND eh.clasificacion=1
            LEFT JOIN   dua_agente a ON a.nit=c.nit AND a.estatus='A' AND sysdate BETWEEN fecha_inicio_vigencia AND fecha_fin_vigencia
            LEFT JOIN   dev_exportadores_habituales ex ON ex.nit=c.nit AND ex.status='A'
            LEFT JOIN   sat_cci.omi_omisiones o ON o.nit=c.nit AND  (
                                                                        o.estado IN (
                                                                                        'ASIGNADA',
                                                                                        'EN PROGRAMA',
                                                                                        'IDENTIFICADA',
                                                                                        'ADICIONADA',
                                                                                        'MARCA FALSA',
                                                                                        'EN PROCESO DE ASIGNACION',
                                                                                        'SUSPENDIDA POR SOLICITUD DE CORRECCION',
                                                                                        'SUSPENDIDA POR SOLICITUD DE VERIFICACION DE MARCA FALSA',
                                                                                        'SUSPENDIDA POR NO LOCALIZABLE',
                                                                                        'SUSPENDIDA POR SOLICITUD DE ELIMINACION',
                                                                                        'INACTIVO NO CONTACTADO',
                                                                                        'INACTIVO NO LOCALIZADO',
                                                                                        'SUSPENDIDA POR SOLICITUD DE INACTIVACION',
                                                                                        'INACTIVO RENUENTE'
                                                                                    ) OR (o.estado='CERRADA' AND o.motivo_cierre IN ('No Contactado','No Localizado'))
                                                                    )
            WHERE       c.nit=:pNit
            GROUP BY    c.nit,
                        c.nombre,
                        tp.nombre_tipo,
                        rcc.descripcion,
                        c.fecha_fallecimiento,
                        ac.nombre_actividad,
                        c.status,
                        c.fecha_nacimiento,
                        c.fecha_inscripcion,
                        c.calle_avenida||' '||c.numero_casa||' '||c.letra||' '||c.apartamento||' '||decode(c.zona,NULL,'','ZONA '||c.zona)||' '||c.colonia||', '||m.nombre_municipio||', '||d.nombre_departamento,
                        c.telefono,
                        cr.nombre,
                        cc.nombre,
                        c.proveedor_estado
        ]]>
    </sql-query>
    
    <sql-query name="findDatosRepresentantesByNit">
        <![CDATA[
            SELECT      r.nit_representante                                 as "nitRepresentante",
                        initcap(SAT_RTU.PPRTU_CAMBIANOMBRE(c.nombre))       as "nombreRepresentante",
                        to_char(r.fecha_nombramiento,'dd/MM/yyyy')          as "fechaNombramiento",
                        decode(r.status,'A','Activo','I','Inactivo')        as "status",
                        r.principal                                         as "representantePrincipal"
            FROM        rtu_representantes r
            INNER JOIN  sat_contribuyentes c ON c.nit=r.nit_representante
            WHERE       r.nit_representado=:pNit
        ]]>
    </sql-query>
    
    <sql-query name="findDatosContadorByNit">
        <![CDATA[
            SELECT      DISTINCT c.nit_contador                                     as "nitContador",
                        initcap(SAT_RTU.PPRTU_CAMBIANOMBRE(contador.nombre))        as "nombreContador",
                        to_char(c.fecha_nombra_contador,'dd/MM/yyyy')               as "fechaNombramiento",
                        decode(ca.status,'A','Activo','I','Inactivo')               as "status"
            FROM        sat_contribuyentes c
            INNER JOIN  rtu_contadores_auditores ca ON ca.nit=c.nit_contador
            INNER JOIN  sat_contribuyentes contador ON contador.nit=c.nit_contador
            WHERE       c.nit=:pNit
        ]]>
    </sql-query>    
    
    <sql-query name="obtenerFormularios223Or215">
        <![CDATA[
        SELECT MAX(decla.NUMERO_DOCUMENTO) AS "numeroDocumento"
                            FROM BA_DECLARACIONES decla
                            WHERE decla.NIT             =:pNit--'26241102'--'20078714'
                            AND decla.CODIGO_FORMULARIO in(215,223)                            
                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                            GROUP BY(DECLA.PERIODO_DESDE)            
        ]]>
    </sql-query>
    
    <sql-query name="consolidado223">
        <![CDATA[

  
SELECT     
       NVL(SUM("casilla7"),0) AS "ventaExenta",
       NVL(SUM("casilla8"),0) AS "ventaMedicamentos",
       NVL(SUM("casilla9"),0) AS "ventasNoAfectas",
       NVL(SUM("casilla10"),0) AS "ventasVehiculos",
       NVL(SUM("casilla11"),0) AS "ventaVehiculosAct",
       NVL(SUM("casilla12"),0) AS "ventaVehiculoActDeb",
       NVL(SUM("casilla13"),0) AS "baseVentasGrabadas",
       NVL(SUM("casilla14"),0) AS "debitoVentasGrabadas",
       NVL(SUM("casilla15"),0) AS "baseServiciosPrestados",
       NVL(SUM("casilla16"),0) AS "debidoServiciosPrestados",
       NVL(SUM("casilla17"),0) AS "sumaBaseDebitos",
       NVL(SUM("casilla18"),0) AS "sumatoriaDebLocales",
       NVL(SUM("casilla19"),0) AS "exportacionCa",
       NVL(SUM("casilla20"),0) AS "exportacionMundo",
       NVL(SUM("casilla21"),0) AS "ventasMedicamentosExpo",
       NVL(SUM("casilla22"),0) AS "ventasVehiculosExpo",
       NVL(SUM("casilla23"),0) AS "ventasVehiculoActExpo",
       NVL(SUM("casilla24"),0) AS "sumaBaseDebitosExpo",
       NVL(SUM("casilla25"),0) AS "creditoRecibidoExportadores",
       NVL(SUM("casilla26"),0) AS "debitoFactExportadores",
       NVL(SUM("casilla27"),0) AS "sumatoriaDebitosExp",
       NVL(SUM("casilla28"),0) AS "compraMedicamentos",            
       NVL(SUM("casilla29"),0) AS "comprasPeqContribuyentes",
       NVL(SUM("casilla30"),0) AS "comprasNoAfectas",
       NVL(SUM("casilla31"),0) AS "comprasVehiculos",
       NVL(SUM("casilla32"),0) AS "comprasVehiculosAct",
       NVL(SUM("casilla33"),0) AS "comprasVehiculosActCred",       
       NVL(SUM("casilla34"),0) AS "comprasCombustibles",
       NVL(SUM("casilla35"),0) AS "creditosComprasCombustible",
       NVL(SUM("casilla36"),0) AS "otrasComprasBase",
       NVL(SUM("casilla37"),0) AS "otrasComprasCreditos",
       NVL(SUM("casilla38"),0) AS "baseServAdquirido",
       NVL(SUM("casilla39"),0) AS "creditosServAdquiridos",
       NVL(SUM("casilla40"),0) AS "importacionesCaBase",
       NVL(SUM("casilla41"),0) AS "importacionesCaCreditos",
       NVL(SUM("casilla42"),0) AS "importacionesMundoBase",
       NVL(SUM("casilla43"),0) AS "importacionesMundoCreditos",
       NVL(SUM("casilla44"),0) AS "comprasActivosFijosBase",
       NVL(SUM("casilla45"),0) AS "comprasActivosFijosCreditos",
       NVL(SUM("casilla46"),0) AS "importacionesActivosFijosBase",
       NVL(SUM("casilla47"),0) AS "importacionesActivosFijosCred",
       NVL(SUM("casilla48"),0) AS "ivaExencionRecibida",
       NVL(SUM("casilla49"),0) AS "remanenteCreditoPeriodoAnt",
       NVL(SUM("casilla50"),0) AS "sumatoriaColBaseCreditosBase",       
       NVL(SUM("casilla51"),0) AS "sumatoriaColBaseCreditosCred",
       NVL(SUM("casilla52"),0) AS "comprasServiciosAdquiridosPeq",
       NVL(SUM("casilla53"),0) AS "comprasCombustiblesBaseExpo",
       NVL(SUM("casilla54"),0) AS "comprasCombustiblesCredExpo",
       NVL(SUM("casilla55"),0) AS "otrasComprasBaseExpo",
       NVL(SUM("casilla56"),0) AS "otrasComprasCreditosExpo",
       NVL(SUM("casilla57"),0) AS "serviciosADquiridosBase",
       NVL(SUM("casilla58"),0) AS "serviciosAdquiridosCreditos",
       NVL(SUM("casilla59"),0) AS "importacionesCaBaseExpo",
       NVL(SUM("casilla60"),0) AS "importaciones",
       NVL(SUM("casilla61"),0) AS "importacionesMundoBaseExpo",
       NVL(SUM("casilla62"),0) AS "importacionesMundoCreditoExpo",
       NVL(SUM("casilla63"),0) AS "comprasActivosVincBaseExpo",       
       NVL(SUM("casilla64"),0) AS "comprasActivosVincCrediosExpo",
       NVL(SUM("casilla65"),0) AS "importacionesFijosVincBaseExpo",
       NVL(SUM("casilla66"),0) AS "importacionesFijosVincCredExpo",
       NVL(SUM("casilla67"),0) AS "remanenteCreditoPerAntExpo",
       NVL(SUM("casilla68"),0) AS "creditoFacturasEmitidasExpo",
       NVL(SUM("casilla69"),0) AS "retencionPracticadasExpo",
       NVL(SUM("casilla70"),0) AS "sumatoriaColBaseCredBaseExpo",
       NVL(SUM("casilla71"),0) AS "sumatoriaColBaseCredCredExpo",
       NVL(SUM("casilla72"),0) AS "toralDeterminacionCredFiscal",
       NVL(SUM("casilla73"),0) AS "creditoFiscalSigPeriodo",
       NVL(SUM("casilla74"),0) AS "creditoFiscalOperacionesExpo",
       NVL(SUM("casilla75"),0) AS "impuestoTotalDeterminadoLocal",
       NVL(SUM("casilla76"),0) AS "impuestoTotalDeterminadoExpo",
       NVL(SUM("casilla77"),0) AS "creditoFiscalPerSigOpExentas",
       NVL(SUM("casilla78"),0) AS "remanenteRetencionIvaPerAnt",
       NVL(SUM("casilla79"),0) AS "numeroResolucion",
       NVL(SUM("casilla80"),0) AS "montoAcreditado",
       NVL(SUM("casilla81"),0) AS "remanenteRetencionIvaRecPer",
       NVL(SUM("casilla82"),0) AS "constanciasRetencionIvaRecPer",
       NVL(SUM("casilla83"),0) AS "saldoRetencionPeriodoSig",
       NVL(SUM("casilla84"),0) AS "subTotalImpuesto",
       NVL(SUM("casilla85"),0) AS "numeroResolucionCompensacion",
       NVL(SUM("casilla86"),0) AS "saldoNoCompensado",
       NVL(SUM("casilla87"),0) AS "valorCompensarPeriodoActual",
       NVL(SUM("casilla88"),0) AS "impuestoPagar",
       NVL(SUM("casilla89"),0) AS "indicadoresComerciales",
       NVL(SUM("casilla90"),0) AS "razonVenta",
       NVL(SUM("casilla91"),0) AS "cantidadFacturasEmitidas",
       NVL(SUM("casilla92"),0) AS "cantidadFacturasRecibidas",
       NVL(SUM("casilla93"),0) AS "cantidadConstanciasExencionEm",
       NVL(SUM("casilla94"),0) AS "cantidadConstanciasExencionRec",
       NVL(SUM("casilla95"),0) AS "cantConstanciasAdqInsumosEm",
       NVL(SUM("casilla96"),0) AS "cantConstanciasAdqInsumosRec",
       NVL(SUM("casilla97"),0) AS "cantConstanciasRetencionIvaEm",
       NVL(SUM("casilla98"),0) AS "cantConstanciasRetencionIvaRec",
       NVL(SUM("casilla99"),0) AS "cantFacturasEspecialesEm",
       NVL(SUM("casilla100"),0) AS "cantidadFacturasEspecialesRec",
       NVL(SUM("casilla101"),0) AS "numeroFormularioRectifica",
       NVL(SUM("casilla102"),0) AS "impuestoIngresadoFormularioRec",
       NVL(SUM("casilla103"),0) AS "impuestoPagarRect",
       NVL(SUM("casilla104"),0) AS "impuestoFavorContribuyente",
       NVL(SUM("casilla108"),0) AS "multaFormal",
       NVL(SUM("casilla109"),0) AS "multaOmision",
       NVL(SUM("casilla110"),0) AS "multaRectificacion",
       NVL(SUM("casilla111"),0) AS "intereses",
       NVL(SUM("casilla112"),0) AS "mora",
       NVL(SUM("casilla113"),0) AS "accesoriosPagar",
       NVL(SUM("casilla114"),0) AS "totalPagar" 
        FROM(

SELECT "casilla6"  AS "casilla7" , "casilla9"  AS "casilla8",  "casilla11" AS "casilla9",  "casilla12" AS "casilla10","casilla14"  AS "casilla11", 
       "casilla15" AS "casilla12", "casilla17" AS "casilla13", "casilla18" AS "casilla14", "casilla19" AS "casilla15", "casilla20" AS "casilla16", 
       "casilla21" AS "casilla17", "casilla22" AS "casilla18", "casilla7"  AS "casilla19", "casilla8"  AS "casilla20", "casilla10" AS "casilla21", 
       "casilla13" AS "casilla22", "casilla16" AS "casilla23", "casilla23" AS "casilla24", "casilla24" AS "casilla25", "casilla25" AS "casilla26",
       "casilla26" AS "casilla27", "casilla27" AS "casilla28", "casilla28" AS "casilla29", "casilla30" AS "casilla30", "casilla31" AS "casilla31",
       "casilla32" AS "casilla32", "casilla33" AS "casilla33", "casilla34" AS "casilla34", "casilla35" AS "casilla35", "casilla38" AS "casilla36",
       "casilla39" AS "casilla37", "casilla42" AS "casilla38", "casilla43" AS "casilla39", "casilla46" AS "casilla40", "casilla47" AS "casilla41",
       "casilla50" AS "casilla42", "casilla51" AS "casilla43", "casilla54" AS "casilla44", "casilla55" AS "casilla45", "casilla58" AS "casilla46",
       "casilla59" AS "casilla47", "casilla62" AS "casilla48", "casilla63" AS "casilla49", "casilla67" AS "casilla50", "casilla68" AS "casilla51",
       "casilla29" AS "casilla52", "casilla36" AS "casilla53", "casilla37" AS "casilla54", "casilla40" AS "casilla55", "casilla41" AS "casilla56",
       "casilla44" AS "casilla57", "casilla45" AS "casilla58", "casilla48" AS "casilla59", "casilla49" AS "casilla60", "casilla52" AS "casilla61",
       "casilla53" AS "casilla62", "casilla56" AS "casilla63", "casilla57" AS "casilla64", "casilla60" AS "casilla65", "casilla61" AS "casilla66",
       "casilla64" AS "casilla67", "casilla65" AS "casilla68", "casilla66" AS "casilla69", "casilla69" AS "casilla70", "casilla70" AS "casilla71",
       "casilla71" AS "casilla72", "casilla72" AS "casilla73", "casilla75" AS "casilla74", "casilla73" AS "casilla75", "casilla74" AS "casilla76",
       "casilla76" AS "casilla77", "casilla78" AS "casilla78",           0 AS "casilla79",           0 AS "casilla80",           0 AS "casilla81",
       "casilla79" AS "casilla82", "casilla80" AS "casilla83",           0 AS "casilla84",           0 AS "casilla85",           0 AS "casilla86",
                 0 AS "casilla87", "casilla81" AS "casilla88", "casilla82" AS "casilla89", "casilla83" AS "casilla90", "casilla84" AS "casilla91",
       "casilla85" AS "casilla92", "casilla86" AS "casilla93", "casilla87" AS "casilla94", "casilla88" AS "casilla95", "casilla89" AS "casilla96", 
       "casilla90" AS "casilla97", "casilla91" AS "casilla98", "casilla92" AS "casilla99",           0 AS "casilla100", "casilla93" AS "casilla101",
       "casilla94" AS "casilla102","casilla95" AS "casilla103",          0 AS "casilla104",          0 AS "casilla105",           0 AS "casilla106",
                 0 AS "casilla107","casilla97" AS "casilla108",          0 AS "casilla109",          0 AS "casilla110","casilla98" AS "casilla111", 
       "casilla99" AS "casilla112",          0 AS "casilla113","casilla102" AS "casilla114", "casilla77" AS "casilla118"

FROM (SELECT * FROM (
              SELECT DECL.NUMERO_CASILLA,
                        SUM(DECL.VALOR_CAMPO) VALOR_CAMPO
                        FROM BA_DET_DECLARACIONES DECL
                        WHERE DECL.NUMERO_DOCUMENTO IN
                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                            FROM BA_DECLARACIONES decla
                            WHERE decla.NIT             =:pNit
                            AND decla.CODIGO_FORMULARIO = 215
                            AND NUMERO_VERSION          = 1
                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                            GROUP BY(DECLA.PERIODO_DESDE))
                            AND DECL.CODIGO_FORMULARIO=215
                            AND DECL.NUMERO_CASILLA  IN(5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,
                                                        57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96)
                            GROUP BY(DECL.NUMERO_CASILLA))
                            
                             pivot (SUM(NVL(valor_campo,0)) 
                                      FOR NUMERO_CASILLA IN 
                                  (5 AS "casilla6",6 AS "casilla7",7 AS "casilla8",8 AS "casilla9",9 AS "casilla10",10 AS "casilla11",11 AS "casilla12",12 AS "casilla13",13 AS "casilla14",14 AS "casilla15",15 AS "casilla16",16 AS "casilla17",
                                                                  17 AS "casilla18",18 AS "casilla19",19 AS "casilla20",20 AS "casilla21",21 AS "casilla22",22 AS "casilla23",23 AS "casilla24",24 AS "casilla25",25 AS "casilla26",26 AS "casilla27",                                  
                                  028 AS"casilla28",029 AS"casilla29",27 AS "casilla30",28 AS "casilla31",29 AS "casilla32",30 AS "casilla33",31 AS "casilla34",32 AS "casilla35",33 AS "casilla36",34 AS "casilla37",35 AS "casilla38",
                                  36 AS "casilla39",37 AS "casilla40",38 AS "casilla41",39 AS "casilla42",40 AS "casilla43",41 AS "casilla44",42 AS "casilla45",43 AS "casilla46",44 AS "casilla47",45 AS "casilla48",
                                  46 AS "casilla49",47 AS "casilla50",48 AS "casilla51",49 AS "casilla52",50 AS "casilla53",51 AS "casilla54",52 AS "casilla55",53 AS "casilla56",54 AS "casilla57",55 AS "casilla58",
                                  56 AS "casilla59",57 AS "casilla60",58 AS "casilla61",59 AS "casilla62",60 AS "casilla63",61 AS "casilla64",62 AS "casilla65",63 AS "casilla66",64 AS "casilla67",65 AS "casilla68",
                                  66 AS "casilla69",67 AS "casilla70",68 AS "casilla71",69 AS "casilla72",70 AS "casilla73",71 AS "casilla74",72 AS "casilla75",73 AS "casilla76",74 AS "casilla77",75 AS "casilla78",
                                  76 AS "casilla79",77 AS "casilla80",78 AS "casilla81",79 AS "casilla82",80 AS "casilla83",81 AS "casilla84",82 AS "casilla85",83 AS "casilla86",84 AS "casilla87",85 AS "casilla88",
                                  86 AS "casilla89",87 AS "casilla90",88 AS "casilla91",89 AS "casilla92",90 AS "casilla93",91 AS "casilla94",92 AS "casilla95",096 AS "casilla96",93 AS "casilla97",94 AS "casilla98",
                                  95 AS "casilla99",0100 AS "casilla100",0101 AS "casilla101",96 AS "casilla102"))
                                  UNION
--version 9
SELECT * FROM (
              SELECT DECL.NUMERO_CASILLA,
                        SUM(DECL.VALOR_CAMPO) VALOR_CAMPO
                        FROM BA_DET_DECLARACIONES DECL
                        WHERE DECL.NUMERO_DOCUMENTO IN
                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                            FROM BA_DECLARACIONES decla
                            WHERE decla.NIT             =:pNit
                            AND decla.CODIGO_FORMULARIO = 215
                            AND NUMERO_VERSION          = 9
                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                            GROUP BY(DECLA.PERIODO_DESDE))
                            AND DECL.CODIGO_FORMULARIO=215
                            AND DECL.NUMERO_CASILLA  IN(6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,
                                                        57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92 ,95,96,97,100)
                            GROUP BY(DECL.NUMERO_CASILLA))
                            
                             pivot (SUM(NVL(valor_campo,0)) 
              FOR NUMERO_CASILLA IN (6 AS "casilla6",7 AS "casilla7",8 AS "casilla8",9 AS "casilla9",10 AS "casilla10",11 AS "casilla11",12 AS "casilla12",13 AS "casilla13",14 AS "casilla14",15 AS "casilla15",16 AS "casilla16",
                                  17 AS "casilla17",18 AS "casilla18",19 AS "casilla19",20 AS "casilla20",21 AS "casilla21",22 AS "casilla22",23 AS "casilla23",24 AS "casilla24",25 AS "casilla25",26 AS "casilla26",
                                  27 AS "casilla27",028 AS"casilla28",029 AS"casilla29", 
                                  
                                  28 AS "casilla30",29 AS "casilla31",30 AS "casilla32",31 AS "casilla33",32 AS "casilla34",33 AS "casilla35",34 AS "casilla36",35 AS "casilla37",36 AS "casilla38",
                                  37 AS "casilla39",38 AS "casilla40",39 AS "casilla41",40 AS "casilla42",41 AS "casilla43",42 AS "casilla44",43 AS "casilla45",44 AS "casilla46",45 AS "casilla47",46 AS "casilla48",
                                  47 AS "casilla49",48 AS "casilla50",49 AS "casilla51",50 AS "casilla52",51 AS "casilla53",52 AS "casilla54",53 AS "casilla55",54 AS "casilla56",55 AS "casilla57",56 AS "casilla58",
                                  57 AS "casilla59",58 AS "casilla60",59 AS "casilla61",60 AS "casilla62",61 AS "casilla63",62 AS "casilla64",63 AS "casilla65",64 AS "casilla66",65 AS "casilla67",66 AS "casilla68",
                                  67 AS "casilla69",68 AS "casilla70",69 AS "casilla71",70 AS "casilla72",71 AS "casilla73",72 AS "casilla74",73 AS "casilla75",74 AS "casilla76",75 AS "casilla77",76 AS "casilla78",
                                  77 AS "casilla79",78 AS "casilla80",79 AS "casilla81",80 AS "casilla82",81 AS "casilla83",82 AS "casilla84",83 AS "casilla85",84 AS "casilla86",85 AS "casilla87",86 AS "casilla88",
                                  87 AS "casilla89",88 AS "casilla90",89 AS "casilla91",90 AS "casilla92",91 AS "casilla93",92 AS "casilla94",095 AS "casilla95",096 AS "casilla96",95 AS "casilla97",96 AS "casilla98",
                                  97 AS "casilla99",0100 AS "casilla100",0101 AS "casilla101",100 AS "casilla102"))
                                  union
SELECT * FROM (
              SELECT DECL.NUMERO_CASILLA,
                        SUM(DECL.VALOR_CAMPO) VALOR_CAMPO
                        FROM BA_DET_DECLARACIONES DECL
                        WHERE DECL.NUMERO_DOCUMENTO IN
                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                            FROM BA_DECLARACIONES decla
                            WHERE decla.NIT             =:pNit
                            AND decla.CODIGO_FORMULARIO = 215
                            AND NUMERO_VERSION          = 7
                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                            GROUP BY(DECLA.PERIODO_DESDE))
                            AND DECL.CODIGO_FORMULARIO=215
                            AND DECL.NUMERO_CASILLA  IN(6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,
                                                        57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102)
                            GROUP BY(DECL.NUMERO_CASILLA))
                            
                             pivot (SUM(NVL(valor_campo,0)) 
              FOR NUMERO_CASILLA IN (6 AS "casilla6",7 AS "casilla7",8 AS "casilla8",9 AS "casilla9",10 AS "casilla10",11 AS "casilla11",12 AS "casilla12",13 AS "casilla13",14 AS "casilla14",15 AS "casilla15",16 AS "casilla16",
                                  17 AS "casilla17",18 AS "casilla18",19 AS "casilla19",20 AS "casilla20",21 AS "casilla21",22 AS "casilla22",23 AS "casilla23",24 AS "casilla24",25 AS "casilla25",26 AS "casilla26",
                                  27 AS "casilla27",28 AS "casilla28",29 AS "casilla29",30 AS "casilla30",31 AS "casilla31",32 AS "casilla32",33 AS "casilla33",34 AS "casilla34",35 AS "casilla35",36 AS "casilla36",
                                  37 AS "casilla37",38 AS "casilla38",39 AS "casilla39",40 AS "casilla40",41 AS "casilla41",42 AS "casilla42",43 AS "casilla43",44 AS "casilla44",45 AS "casilla45",46 AS "casilla46",
                                  47 AS "casilla47",48 AS "casilla48",49 AS "casilla49",50 AS "casilla50",51 AS "casilla51",52 AS "casilla52",53 AS "casilla53",54 AS "casilla54",55 AS "casilla55",56 AS "casilla56",
                                  57 AS "casilla57",58 AS "casilla58",59 AS "casilla59",60 AS "casilla60",61 AS "casilla61",62 AS "casilla62",63 AS "casilla63",64 AS "casilla64",65 AS "casilla65",66 AS "casilla66",
                                  67 AS "casilla67",68 AS "casilla68",69 AS "casilla69",70 AS "casilla70",71 AS "casilla71",72 AS "casilla72",73 AS "casilla73",74 AS "casilla74",75 AS "casilla75",76 AS "casilla76",
                                  77 AS "casilla77",78 AS "casilla78",79 AS "casilla79",80 AS "casilla80",81 AS "casilla81",82 AS "casilla82",83 AS "casilla83",84 AS "casilla84",85 AS "casilla85",86 AS "casilla86",
                                  87 AS "casilla87",88 AS "casilla88",89 AS "casilla89",90 AS "casilla90",91 AS "casilla91",92 AS "casilla92",93 AS "casilla93",94 AS "casilla94",95 AS "casilla95",96 AS "casilla96",
                                  97 AS "casilla97",98 AS "casilla98",99 AS "casilla99",100 AS "casilla100",101 AS "casilla101",102 AS "casilla102")))                                  
                                  UNION
                                  
                                  SELECT * FROM
                      (SELECT DECL.NUMERO_CASILLA,
                        SUM(DECL.VALOR_CAMPO) VALOR_CAMPO
                        FROM BA_DET_DECLARACIONES DECL
                        WHERE DECL.NUMERO_DOCUMENTO IN
                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                            FROM BA_DECLARACIONES decla
                            WHERE decla.NIT             =:pNit
                            AND decla.CODIGO_FORMULARIO = 223
                            AND NUMERO_VERSION          = 1
                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                            GROUP BY(DECLA.PERIODO_DESDE))
                            AND DECL.CODIGO_FORMULARIO=223
                            AND DECL.NUMERO_CASILLA  IN(5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55)
                            GROUP BY(DECL.NUMERO_CASILLA))
              pivot (SUM(NVL(valor_campo,0)) 
              FOR NUMERO_CASILLA IN (5 AS "casilla7",6 AS "casilla8",7 AS "casilla9",8 AS "casilla10",9 AS "casilla11",10 AS "casilla12",11 AS "casilla13",12 AS "casilla14",13 AS "casilla15",14 AS "casilla16",
                                  15 AS "casilla17",16 AS "casilla18",019 AS"casilla19", 020 AS "casilla20",021 AS "casilla21",022 AS "casilla22",023 AS "casilla23",024 AS "casilla24",025 AS "casilla25",026 AS "casilla26",
                                  027 AS "casilla27",17 AS "casilla28",029 AS "casilla29",030 AS "casilla30",18 AS "casilla31",19 AS "casilla32",20 AS "casilla33",21 AS "casilla34",22 AS "casilla35",23 AS "casilla36",24 AS "casilla37",
                                  25 AS "casilla38",26 AS "casilla39",040 AS "casilla40",041 AS "casilla41",27 AS "casilla42",28 AS "casilla43",044 AS "casilla44",045 AS "casilla45",046 AS "casilla46",047 AS "casilla47",29 AS "casilla48",
                                  30 AS "casilla49",31 AS "casilla50",32 AS "casilla51",052 AS "casilla52",053 AS "casilla53",054 AS "casilla54",055 AS "casilla55",056 AS "casilla56",057 AS "casilla57",058 AS "casilla58",059 AS "casilla59",
                                  060 AS "casilla60",061 AS "casilla61",062 AS "casilla62",063 AS "casilla63",064 AS "casilla64",065 AS "casilla65",066 AS "casilla66",067 AS "casilla67",068 AS "casilla68",069 AS "casilla69",070 AS "casilla70",
                                  071 AS "casilla71",072 AS "casilla72",33 AS "casilla73",074 AS "casilla74",34 AS "casilla75",076 AS "casilla76",077 AS "casilla77",35 AS "casilla78",36 AS "casilla79",37 AS "casilla80",38 AS "casilla81",39 AS "casilla82",
                                  40 AS "casilla83",41 AS "casilla84",42 AS "casilla85",43 AS "casilla86",44 AS "casilla87",45 AS "casilla88",089 AS "casilla89",090 AS "casilla90",46 AS "casilla91",47 AS "casilla92",093 AS "casilla93",48 AS "casilla94",
                                  095 AS "casilla95",49 AS "casilla96",097 AS "casilla97",098 AS "casilla98",099 AS "casilla99",0100 AS "casilla100",50 AS "casilla101",51 AS "casilla102",52 AS "casilla103",0104 AS "casilla104",0105 AS "casilla105",
                                  0106 AS "casilla106",0107 AS "casilla107",53 AS "casilla108",0109 AS "casilla109",0110 AS "casilla110",54 AS "casilla111",0112 AS "casilla112",0113 AS "casilla113",55 AS "casilla114",
                                  0118 AS "casilla118"))
              UNION
              SELECT * FROM
                      (SELECT DECL.NUMERO_CASILLA,
                      SUM(DECL.VALOR_CAMPO) VALOR_CAMPO
                      FROM BA_DET_DECLARACIONES DECL
                      WHERE DECL.NUMERO_DOCUMENTO IN
                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                            FROM BA_DECLARACIONES decla
                            WHERE decla.NIT             =:pNit
                            AND decla.CODIGO_FORMULARIO = 223
                            AND NUMERO_VERSION          = 2
                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                            GROUP BY(DECLA.PERIODO_DESDE))
                      AND DECL.CODIGO_FORMULARIO=223
                      AND DECL.NUMERO_CASILLA  IN(5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)
                      GROUP BY(DECL.NUMERO_CASILLA))
              pivot (SUM(NVL(valor_campo,0)) 
              FOR NUMERO_CASILLA IN (5 AS "casilla7",6 AS "casilla8",7 AS "casilla9",8 AS "casilla10",9 AS "casilla11",10 AS "casilla12",11 AS "casilla13",12 AS "casilla14",13 AS "casilla15",14 AS "casilla16",
                                15 AS "casilla17",16 AS "casilla18",019 AS"casilla19", 020 AS "casilla20",021 AS "casilla21",022 AS "casilla22",023 AS "casilla23",024 AS "casilla24",025 AS "casilla25",026 AS "casilla26",
                                027 AS "casilla27",17 AS "casilla28",18 AS "casilla29",030 AS "casilla30",19 AS "casilla31",20 AS "casilla32",21 AS "casilla33",22 AS "casilla34",23 AS "casilla35",24 AS "casilla36",25 AS "casilla37",
                                26 AS "casilla38",27 AS "casilla39",040 AS "casilla40",041 AS "casilla41",28 AS "casilla42",29 AS "casilla43",044 AS "casilla44",045 AS "casilla45",046 AS "casilla46",047 AS "casilla47",30 AS "casilla48",
                                31 AS "casilla49",32 AS "casilla50",33 AS "casilla51",052 AS "casilla52",053 AS "casilla53",054 AS "casilla54",055 AS "casilla55",056 AS "casilla56",057 AS "casilla57",058 AS "casilla58",059 AS "casilla59",
                                060 AS "casilla60",061 AS "casilla61",062 AS "casilla62",063 AS "casilla63",064 AS "casilla64",065 AS "casilla65",066 AS "casilla66",067 AS "casilla67",068 AS "casilla68",069 AS "casilla69",070 AS "casilla70",
                                071 AS "casilla71",072 AS "casilla72",34 AS "casilla73",074 AS "casilla74",35 AS "casilla75",076 AS "casilla76",077 AS "casilla77",36 AS "casilla78",37 AS "casilla79",38 AS "casilla80",39 AS "casilla81",40 AS "casilla82",
                                41 AS "casilla83",42 AS "casilla84",43 AS "casilla85",44 AS "casilla86",45 AS "casilla87",46 AS "casilla88",089 AS "casilla89",090 AS "casilla90",47 AS "casilla91",48 AS "casilla92",093 AS "casilla93",49 AS "casilla94",
                                095 AS "casilla95",50 AS "casilla96",097 AS "casilla97",098 AS "casilla98",099 AS "casilla99",0100 AS "casilla100",51 AS "casilla101",52 AS "casilla102",53 AS "casilla103",0104 AS "casilla104",0105 AS "casilla105",
                                0106 AS "casilla106",0107 AS "casilla107",54 AS "casilla108",0109 AS "casilla109",0110 AS "casilla110",55 AS "casilla111",0112 AS "casilla112",0113 AS "casilla113",56 AS "casilla114",
                                0118 AS "casilla118"))
              UNION
              SELECT * FROM
                      (SELECT DECL.NUMERO_CASILLA,
                      SUM(DECL.VALOR_CAMPO) VALOR_CAMPO
                      FROM BA_DET_DECLARACIONES DECL
                      WHERE DECL.NUMERO_DOCUMENTO IN
                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                            FROM BA_DECLARACIONES decla
                            WHERE decla.NIT             =:pNit
                            AND decla.CODIGO_FORMULARIO = 223
                            AND NUMERO_VERSION          = 8
                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                            GROUP BY(DECLA.PERIODO_DESDE))
                      AND DECL.CODIGO_FORMULARIO=223
                      AND DECL.NUMERO_CASILLA  IN(6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57)
                      GROUP BY(DECL.NUMERO_CASILLA))
              pivot (SUM(NVL(valor_campo,0)) 
              FOR NUMERO_CASILLA IN (6 AS "casilla7",7 AS "casilla8",8 AS "casilla9",9 AS "casilla10",10 AS "casilla11",11 AS "casilla12",12 AS "casilla13",13 AS "casilla14",14 AS "casilla15",15 AS "casilla16",
                                16 AS "casilla17",17 AS "casilla18",019 AS"casilla19", 020 AS "casilla20",021 AS "casilla21",022 AS "casilla22",023 AS "casilla23",024 AS "casilla24",025 AS "casilla25",026 AS "casilla26",
                                027 AS "casilla27",18 AS "casilla28",19 AS "casilla29",030 AS "casilla30",20 AS "casilla31",21 AS "casilla32",22 AS "casilla33",23 AS "casilla34",24 AS "casilla35",25 AS "casilla36",26 AS "casilla37",
                                27 AS "casilla38",28 AS "casilla39",040 AS "casilla40",041 AS "casilla41",29 AS "casilla42",30 AS "casilla43",044 AS "casilla44",045 AS "casilla45",046 AS "casilla46",047 AS "casilla47",31 AS "casilla48",
                                32 AS "casilla49",33 AS "casilla50",34 AS "casilla51",052 AS "casilla52",053 AS "casilla53",054 AS "casilla54",055 AS "casilla55",056 AS "casilla56",057 AS "casilla57",058 AS "casilla58",059 AS "casilla59",
                                060 AS "casilla60",061 AS "casilla61",062 AS "casilla62",063 AS "casilla63",064 AS "casilla64",065 AS "casilla65",066 AS "casilla66",067 AS "casilla67",068 AS "casilla68",069 AS "casilla69",070 AS "casilla70",
                                071 AS "casilla71",072 AS "casilla72",35 AS "casilla73",074 AS "casilla74",36 AS "casilla75",076 AS "casilla76",077 AS "casilla77",37 AS "casilla78",38 AS "casilla79",39 AS "casilla80",40 AS "casilla81",41 AS "casilla82",
                                42 AS "casilla83",43 AS "casilla84",44 AS "casilla85",45 AS "casilla86",46 AS "casilla87",47 AS "casilla88",089 AS "casilla89",090 AS "casilla90",48 AS "casilla91",49 AS "casilla92",093 AS "casilla93",50 AS "casilla94",
                                095 AS "casilla95",51 AS "casilla96",097 AS "casilla97",098 AS "casilla98",099 AS "casilla99",0100 AS "casilla100",52 AS "casilla101",53 AS "casilla102",54 AS "casilla103",0104 AS "casilla104",0105 AS "casilla105",
                                0106 AS "casilla106",0107 AS "casilla107",55 AS "casilla108",0109 AS "casilla109",0110 AS "casilla110",56 AS "casilla111",0112 AS "casilla112",0113 AS "casilla113",57 AS "casilla114",
                                0118 AS "casilla118"))
              UNION   
              SELECT * FROM
                      (SELECT DECL.NUMERO_CASILLA,
                      SUM(DECL.VALOR_CAMPO) VALOR_CAMPO
                      FROM BA_DET_DECLARACIONES DECL
                      WHERE DECL.NUMERO_DOCUMENTO IN
                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                            FROM BA_DECLARACIONES decla
                            WHERE decla.NIT             =:pNit
                            AND decla.CODIGO_FORMULARIO = 223
                            AND NUMERO_VERSION          = 9
                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                            GROUP BY(DECLA.PERIODO_DESDE))
                      AND DECL.CODIGO_FORMULARIO=223
                      AND DECL.NUMERO_CASILLA  IN(6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)
                      GROUP BY(DECL.NUMERO_CASILLA))
              pivot (SUM(NVL(valor_campo,0)) 
              FOR NUMERO_CASILLA IN (6 AS "casilla7",7 AS "casilla8",8 AS "casilla9",9 AS "casilla10",10 AS "casilla11",11 AS "casilla12",12 AS "casilla13",13 AS "casilla14",14 AS "casilla15",
                                15 AS "casilla16",16 AS "casilla17",17 AS "casilla18",019 AS"casilla19", 020 AS "casilla20",021 AS "casilla21",022 AS "casilla22",023 AS "casilla23",
                                024 AS "casilla24",025 AS "casilla25",026 AS "casilla26",027 AS "casilla27",18 AS "casilla28",029 AS "casilla29",030 AS "casilla30",19 AS "casilla31",
                                20 AS "casilla32",21 AS "casilla33",22 AS "casilla34",23 AS "casilla35",24 AS "casilla36",25 AS "casilla37",26 AS "casilla38",27 AS "casilla39",040 AS "casilla40",
                                041 AS "casilla41",28 AS "casilla42",29 AS "casilla43",044 AS "casilla44",045 AS "casilla45",046 AS "casilla46",047 AS "casilla47",30 AS "casilla48",31 AS "casilla49",
                                32 AS "casilla50",33 AS "casilla51",052 AS "casilla52",053 AS "casilla53",054 AS "casilla54",055 AS "casilla55",056 AS "casilla56",057 AS "casilla57",058 AS "casilla58",
                                059 AS "casilla59",060 AS "casilla60",061 AS "casilla61",062 AS "casilla62",063 AS "casilla63",064 AS "casilla64",065 AS "casilla65",066 AS "casilla66",067 AS "casilla67",
                                068 AS "casilla68",069 AS "casilla69",070 AS "casilla70",071 AS "casilla71",072 AS "casilla72",34 AS "casilla73",074 AS "casilla74",35 AS "casilla75",076 AS "casilla76",
                                077 AS "casilla77",36 AS "casilla78",37 AS "casilla79",38 AS "casilla80",39 AS "casilla81",40 AS "casilla82",41 AS "casilla83",42 AS "casilla84",43 AS "casilla85",44 AS "casilla86",
                                45 AS "casilla87",46 AS "casilla88",089 AS "casilla89",090 AS "casilla90",47 AS "casilla91",48 AS "casilla92",093 AS "casilla93",49 AS "casilla94",095 AS "casilla95",
                                50 AS "casilla96",097 AS "casilla97",098 AS "casilla98",099 AS "casilla99",0100 AS "casilla100",51 AS "casilla101",52 AS "casilla102",53 AS "casilla103",0104 AS "casilla104",
                                0105 AS "casilla105",0106 AS "casilla106",0107 AS "casilla107",54 AS "casilla108",0109 AS "casilla109",0110 AS "casilla110",55 AS "casilla111",0112 AS "casilla112",0113 AS "casilla113",
                                56 AS "casilla114",0118 AS "casilla118"))
              UNION              
              SELECT * FROM
                      (SELECT DECL.NUMERO_CASILLA,
                      SUM(DECL.VALOR_CAMPO) VALOR_CAMPO
                      FROM BA_DET_DECLARACIONES DECL
                      WHERE DECL.NUMERO_DOCUMENTO IN
                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                            FROM BA_DECLARACIONES decla
                            WHERE decla.NIT             =:pNit
                            AND decla.CODIGO_FORMULARIO = 223
                            AND NUMERO_VERSION          = 7
                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                            GROUP BY(DECLA.PERIODO_DESDE)
                            )
                      AND DECL.CODIGO_FORMULARIO=223
                      AND DECL.NUMERO_CASILLA  IN(7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,
                                  58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,110,111,112,113,114,118)
                      GROUP BY(DECL.NUMERO_CASILLA))
              pivot (SUM(NVL(valor_campo,0)) 
              FOR NUMERO_CASILLA IN (7 AS "casilla7",8 AS "casilla8",9 AS "casilla9",10 AS "casilla10",11 AS "casilla11",12 AS "casilla12",13 AS "casilla13",14 AS "casilla14",15 AS "casilla15",16 AS "casilla16",
                                  17 AS "casilla17",18 AS "casilla18",19 AS "casilla19",20 AS "casilla20",21 AS "casilla21",22 AS "casilla22",23 AS "casilla23",24 AS "casilla24",25 AS "casilla25",26 AS "casilla26",
                                  27 AS "casilla27",28 AS "casilla28",29 AS "casilla29",30 AS "casilla30",31 AS "casilla31",32 AS "casilla32",33 AS "casilla33",34 AS "casilla34",35 AS "casilla35",36 AS "casilla36",
                                  37 AS "casilla37",38 AS "casilla38",39 AS "casilla39",40 AS "casilla40",41 AS "casilla41",42 AS "casilla42",43 AS "casilla43",44 AS "casilla44",45 AS "casilla45",46 AS "casilla46",
                                  47 AS "casilla47",48 AS "casilla48",49 AS "casilla49",50 AS "casilla50",51 AS "casilla51",52 AS "casilla52",53 AS "casilla53",54 AS "casilla54",55 AS "casilla55",56 AS "casilla56",
                                  57 AS "casilla57",58 AS "casilla58",59 AS "casilla59",60 AS "casilla60",61 AS "casilla61",62 AS "casilla62",63 AS "casilla63",64 AS "casilla64",65 AS "casilla65",66 AS "casilla66",
                                  67 AS "casilla67",68 AS "casilla68",69 AS "casilla69",70 AS "casilla70",71 AS "casilla71",72 AS "casilla72",73 AS "casilla73",74 AS "casilla74",75 AS "casilla75",76 AS "casilla76",
                                  77 AS "casilla77",78 AS "casilla78",79 AS "casilla79",80 AS "casilla80",81 AS "casilla81",82 AS "casilla82",83 AS "casilla83",84 AS "casilla84",85 AS "casilla85",86 AS "casilla86",
                                  87 AS "casilla87",88 AS "casilla88",89 AS "casilla89",90 AS "casilla90",91 AS "casilla91",92 AS "casilla92",93 AS "casilla93",94 AS "casilla94",95 AS "casilla95",96 AS "casilla96",
                                  97 AS "casilla97",98 AS "casilla98",99 AS "casilla99",100 AS "casilla100",101 AS "casilla101",102 AS "casilla102",103 AS "casilla103",104 AS "casilla104",0105 AS "casilla105",0106 AS "casilla106",
                                  0107 AS "casilla107",108 AS "casilla108",109 AS "casilla109",110 AS "casilla110",111 AS "casilla111",112 AS "casilla112",113 AS "casilla113",114 AS "casilla114",118 AS "casilla118")))
 ]]>
    </sql-query>
    
    <sql-query name="remanentesConsolidado223">
        <![CDATA[
            SELECT NVL("remanente5",0) AS "remanente5", 
                   NVL("remanente6",0) AS "remanente6" ,  
                   NVL("remanente7",0) AS "remanente7" FROM(
              SELECT  "remanente5","remanente6" ,  "remanente7", 
               rank() over (order by "NUMERO_DOCUMENTO" ASC) pos
               FROM  
                    (SELECT *
                          FROM (
                              SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                      DECL.VALOR_CAMPO VALOR_CAMPO                  
                                      FROM BA_DET_DECLARACIONES DECL
                                      WHERE DECL.NUMERO_DOCUMENTO IN
                                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                            FROM BA_DECLARACIONES decla
                                            WHERE decla.NIT             =:pNit
                                            AND decla.CODIGO_FORMULARIO = 215
                                            AND NUMERO_VERSION          = 1
                                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                            GROUP BY(DECLA.PERIODO_DESDE))
                                      AND DECL.CODIGO_FORMULARIO=215
                                      AND DECL.NUMERO_CASILLA  IN(16,60,61,75))
                              pivot (SUM(valor_campo) 
                              FOR NUMERO_CASILLA IN (16 as "prueba",60 AS "remanente5",61 AS "remanente6",75 AS "remanente7"))
                    UNION
                    SELECT *
                          FROM (
                              SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                      DECL.VALOR_CAMPO VALOR_CAMPO                  
                                      FROM BA_DET_DECLARACIONES DECL
                                      WHERE DECL.NUMERO_DOCUMENTO IN
                                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                            FROM BA_DECLARACIONES decla
                                            WHERE decla.NIT             =:pNit
                                            AND decla.CODIGO_FORMULARIO = 215
                                            AND NUMERO_VERSION          = 7
                                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                            GROUP BY(DECLA.PERIODO_DESDE))
                                      AND DECL.CODIGO_FORMULARIO=215
                                      AND DECL.NUMERO_CASILLA  IN(17,63,64,78))
                              pivot (SUM(valor_campo) 
                              FOR NUMERO_CASILLA IN (17 as "prueba",63 AS "remanente5",64 AS "remanente6",78 AS "remanente7"))                             
                  UNION                              
                  SELECT *
                        FROM (
                            SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                    DECL.VALOR_CAMPO VALOR_CAMPO                  
                                    FROM BA_DET_DECLARACIONES DECL
                                    WHERE DECL.NUMERO_DOCUMENTO IN
                                          (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                          FROM BA_DECLARACIONES decla
                                          WHERE decla.NIT             =:pNit
                                          AND decla.CODIGO_FORMULARIO = 215
                                          AND NUMERO_VERSION          = 9
                                          AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                          GROUP BY(DECLA.PERIODO_DESDE))
                                    AND DECL.CODIGO_FORMULARIO=215
                                    AND DECL.NUMERO_CASILLA  IN(17,61,62,76))
                            pivot (SUM(valor_campo) 
                            FOR NUMERO_CASILLA IN (17 as "prueba",61 AS "remanente5",62 AS "remanente6",76 AS "remanente7"))
                    UNION                    
                    SELECT *
                        FROM (
                              SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                      DECL.VALOR_CAMPO VALOR_CAMPO                  
                                      FROM BA_DET_DECLARACIONES DECL
                                      WHERE DECL.NUMERO_DOCUMENTO IN
                                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                            FROM BA_DECLARACIONES decla
                                            WHERE decla.NIT             =:pNit
                                            AND decla.CODIGO_FORMULARIO = 223
                                            AND NUMERO_VERSION          = 1
                                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                            GROUP BY(DECLA.PERIODO_DESDE))
                                      AND DECL.CODIGO_FORMULARIO=223
                                      AND DECL.NUMERO_CASILLA  IN(11,30,35) )
                              pivot (SUM(valor_campo) 
                              FOR NUMERO_CASILLA IN (11 as "prueba",30 AS "remanente5",0 AS "remanente6",35 AS "remanente7")) 
                      UNION    
                      SELECT *
                          FROM (
                              SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                      DECL.VALOR_CAMPO VALOR_CAMPO                  
                                      FROM BA_DET_DECLARACIONES DECL
                                      WHERE DECL.NUMERO_DOCUMENTO IN
                                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                            FROM BA_DECLARACIONES decla
                                            WHERE decla.NIT             =:pNit
                                            AND decla.CODIGO_FORMULARIO = 223
                                            AND NUMERO_VERSION         =2
                                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                            GROUP BY(DECLA.PERIODO_DESDE))
                                      AND DECL.CODIGO_FORMULARIO=223
                                      AND DECL.NUMERO_CASILLA  IN(11,31,36))
                              pivot (SUM(valor_campo) 
                              FOR NUMERO_CASILLA IN (11 as "prueba",31 AS "remanente5",0 AS "remanente6",36 AS "remanente7"))  
                     UNION 
                      SELECT *
                          FROM (
                              SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                      DECL.VALOR_CAMPO VALOR_CAMPO                  
                                      FROM BA_DET_DECLARACIONES DECL
                                      WHERE DECL.NUMERO_DOCUMENTO IN
                                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                            FROM BA_DECLARACIONES decla
                                            WHERE decla.NIT             =:pNit
                                            AND decla.CODIGO_FORMULARIO = 223
                                            AND NUMERO_VERSION          = 7
                                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                                                               
                                            GROUP BY(DECLA.PERIODO_DESDE))
                                      AND DECL.CODIGO_FORMULARIO=223
                                      AND DECL.NUMERO_CASILLA  IN(13,49,67,78))
                              pivot (SUM(valor_campo) 
                              FOR NUMERO_CASILLA IN (13 as "prueba",49 AS "remanente5",67 AS "remanente6",78 AS "remanente7"))        
                      UNION
                      SELECT *
                          FROM (
                              SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                      DECL.VALOR_CAMPO VALOR_CAMPO                  
                                      FROM BA_DET_DECLARACIONES DECL
                                      WHERE DECL.NUMERO_DOCUMENTO IN
                                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                            FROM BA_DECLARACIONES decla
                                            WHERE decla.NIT             =:pNit
                                            AND decla.CODIGO_FORMULARIO = 223
                                            AND NUMERO_VERSION          = 8
                                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                            GROUP BY(DECLA.PERIODO_DESDE))
                                      AND DECL.CODIGO_FORMULARIO=223
                                      AND DECL.NUMERO_CASILLA  IN(12,32,37))
                              pivot (SUM(valor_campo) 
                              FOR NUMERO_CASILLA IN (12 as "prueba",32 AS "remanente5",0 AS "remanente6",37 AS "remanente7"))    
                          
                      UNION
                      SELECT *
                          FROM (
                              SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                      DECL.VALOR_CAMPO VALOR_CAMPO                  
                                      FROM BA_DET_DECLARACIONES DECL
                                      WHERE DECL.NUMERO_DOCUMENTO IN
                                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                            FROM BA_DECLARACIONES decla
                                            WHERE decla.NIT             =:pNit
                                            AND decla.CODIGO_FORMULARIO = 223
                                            AND NUMERO_VERSION          = 9
                                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                            GROUP BY(DECLA.PERIODO_DESDE))
                                      AND DECL.CODIGO_FORMULARIO=223
                                      AND DECL.NUMERO_CASILLA  IN(12,31,36))
                              pivot (SUM(valor_campo) 
                              FOR NUMERO_CASILLA IN (12 as "prueba",31 AS "remanente5",0 AS "remanente6",36 AS "remanente7"))              
                      UNION 
                      SELECT *
                          FROM (
                              SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                      DECL.VALOR_CAMPO VALOR_CAMPO                  
                                      FROM BA_DET_DECLARACIONES DECL
                                      WHERE DECL.NUMERO_DOCUMENTO IN
                                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                            FROM BA_DECLARACIONES decla
                                            WHERE decla.NIT             =:pNit
                                            AND decla.CODIGO_FORMULARIO = 223
                                            AND NUMERO_VERSION          = 7
                                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                                                               
                                            GROUP BY(DECLA.PERIODO_DESDE))
                                      AND DECL.CODIGO_FORMULARIO=223
                                      AND DECL.NUMERO_CASILLA  IN(13,49,67,78))
                              pivot (SUM(valor_campo) 
                              FOR NUMERO_CASILLA IN (13 as "prueba",49 AS "remanente5",67 AS "remanente6",78 AS "remanente7"))
            )order by "NUMERO_DOCUMENTO"
            )WHERE POS=1
        ]]>
    </sql-query>
    
    <sql-query name="determinacionCreditoFiscalConsolidado223">
        <![CDATA[
             SELECT  NVL("credFiscalLocal",0) AS "credFiscalLocal",
                     NVL("crediFiscalExp",0)   AS "crediFiscalExp" FROM(
              SELECT  "credFiscalLocal","crediFiscalExp", 
               rank() over (order by "NUMERO_DOCUMENTO" DESC) pos
               FROM  
                    (SELECT *
                          FROM (
                              SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                      DECL.VALOR_CAMPO VALOR_CAMPO                  
                                      FROM BA_DET_DECLARACIONES DECL
                                      WHERE DECL.NUMERO_DOCUMENTO IN
                                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                            FROM BA_DECLARACIONES decla
                                            WHERE decla.NIT             =:pNit
                                            AND decla.CODIGO_FORMULARIO = 215
                                            AND NUMERO_VERSION          = 1
                                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                            GROUP BY(DECLA.PERIODO_DESDE))
                                      AND DECL.CODIGO_FORMULARIO=215
                                      AND DECL.NUMERO_CASILLA  IN(16, 69,73))
                              pivot (SUM(valor_campo) 
                              FOR NUMERO_CASILLA IN (16 AS "pivote", 69 AS "credFiscalLocal",73 AS "crediFiscalExp"))
                     UNION
                     SELECT *
                          FROM (
                              SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                      DECL.VALOR_CAMPO VALOR_CAMPO                  
                                      FROM BA_DET_DECLARACIONES DECL
                                      WHERE DECL.NUMERO_DOCUMENTO IN
                                            (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                            FROM BA_DECLARACIONES decla
                                            WHERE decla.NIT             =:pNit
                                            AND decla.CODIGO_FORMULARIO = 215
                                            AND NUMERO_VERSION          = 7
                                            AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                            GROUP BY(DECLA.PERIODO_DESDE))
                                      AND DECL.CODIGO_FORMULARIO=215
                                      AND DECL.NUMERO_CASILLA  IN(17,72,76))
                              pivot (SUM(valor_campo) 
                              FOR NUMERO_CASILLA IN (17 AS "pivote",72 AS "credFiscalLocal",76 AS "crediFiscalExp"))                           
                     UNION                              
                     SELECT *
                          FROM (
                                SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                        DECL.VALOR_CAMPO VALOR_CAMPO                  
                                        FROM BA_DET_DECLARACIONES DECL
                                        WHERE DECL.NUMERO_DOCUMENTO IN
                                              (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                              FROM BA_DECLARACIONES decla
                                              WHERE decla.NIT             =:pNit
                                              AND decla.CODIGO_FORMULARIO = 215
                                              AND NUMERO_VERSION          = 9
                                              AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                              GROUP BY(DECLA.PERIODO_DESDE))
                                        AND DECL.CODIGO_FORMULARIO=215
                                        AND DECL.NUMERO_CASILLA  IN(17,70,74))
                                pivot (SUM(valor_campo) 
                                FOR NUMERO_CASILLA IN (17 AS "pivote",70 AS "credFiscalLocal",74 AS "crediFiscalExp"))
                     UNION                    
                     SELECT *
                          FROM (
                                SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                        DECL.VALOR_CAMPO VALOR_CAMPO                  
                                        FROM BA_DET_DECLARACIONES DECL
                                        WHERE DECL.NUMERO_DOCUMENTO IN
                                              (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                              FROM BA_DECLARACIONES decla
                                              WHERE decla.NIT             =:pNit
                                              AND decla.CODIGO_FORMULARIO = 223
                                              AND NUMERO_VERSION          = 1
                                              AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                              GROUP BY(DECLA.PERIODO_DESDE))
                                        AND DECL.CODIGO_FORMULARIO=223
                                        AND DECL.NUMERO_CASILLA  IN(11,33) )
                                pivot (SUM(valor_campo) 
                                FOR NUMERO_CASILLA IN (11 AS "pivote",33 AS "credFiscalLocal",0 AS "crediFiscalExp"))    
                      UNION              
                      SELECT *
                           FROM (
                                  SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                          DECL.VALOR_CAMPO VALOR_CAMPO                  
                                          FROM BA_DET_DECLARACIONES DECL
                                          WHERE DECL.NUMERO_DOCUMENTO IN
                                                (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                                FROM BA_DECLARACIONES decla
                                                WHERE decla.NIT             =:pNit
                                                AND decla.CODIGO_FORMULARIO = 223
                                                AND NUMERO_VERSION          =2
                                                AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                                GROUP BY(DECLA.PERIODO_DESDE))
                                          AND DECL.CODIGO_FORMULARIO=223
                                          AND DECL.NUMERO_CASILLA  IN(11,34))
                                  pivot (SUM(valor_campo) 
                                  FOR NUMERO_CASILLA IN (11 AS "pivote",34 AS "credFiscalLocal",0 AS "crediFiscalExp")) 
                       UNION 
                       SELECT *
                            FROM (
                                  SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                          DECL.VALOR_CAMPO VALOR_CAMPO                  
                                          FROM BA_DET_DECLARACIONES DECL
                                          WHERE DECL.NUMERO_DOCUMENTO IN
                                                (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                                FROM BA_DECLARACIONES decla
                                                WHERE decla.NIT             =:pNit
                                                AND decla.CODIGO_FORMULARIO = 223
                                                AND NUMERO_VERSION          = 7
                                                AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                                GROUP BY(DECLA.PERIODO_DESDE))
                                          AND DECL.CODIGO_FORMULARIO=223
                                          AND DECL.NUMERO_CASILLA  IN(13,73,77))
                                  pivot (SUM(valor_campo) 
                                  FOR NUMERO_CASILLA IN (13 AS "pivote",73 AS "credFiscalLocal",77 AS "crediFiscalExp"))
                      UNION
                      SELECT *
                          FROM (
                                  SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                          DECL.VALOR_CAMPO VALOR_CAMPO                  
                                          FROM BA_DET_DECLARACIONES DECL
                                          WHERE DECL.NUMERO_DOCUMENTO IN
                                                (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                                FROM BA_DECLARACIONES decla
                                                WHERE decla.NIT             =:pNit
                                                AND decla.CODIGO_FORMULARIO = 223
                                                AND NUMERO_VERSION          = 8
                                                AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                                GROUP BY(DECLA.PERIODO_DESDE))
                                          AND DECL.CODIGO_FORMULARIO=223
                                          AND DECL.NUMERO_CASILLA  IN(12,35))
                                  pivot (SUM(valor_campo) 
                                  FOR NUMERO_CASILLA IN (12 AS "pivote",35 AS "credFiscalLocal",0 AS "crediFiscalExp"))                     
                        UNION
                        SELECT *
                              FROM (
                                    SELECT DECL.NUMERO_DOCUMENTO, DECL.NUMERO_CASILLA,
                                            DECL.VALOR_CAMPO VALOR_CAMPO                  
                                            FROM BA_DET_DECLARACIONES DECL
                                            WHERE DECL.NUMERO_DOCUMENTO IN
                                                  (SELECT MAX(decla.NUMERO_DOCUMENTO)
                                                  FROM BA_DECLARACIONES decla
                                                  WHERE decla.NIT             =:pNit
                                                  AND decla.CODIGO_FORMULARIO = 223
                                                  AND NUMERO_VERSION          =9
                                                  AND decla.PERIODO_DESDE BETWEEN TO_DATE(:pFechaDel,'DD/MM/YYYY') AND TO_DATE(:pFechaAl,'DD/MM/YYYY')                                   
                                                  GROUP BY(DECLA.PERIODO_DESDE))
                                            AND DECL.CODIGO_FORMULARIO=223
                                            AND DECL.NUMERO_CASILLA  IN(12, 34))
                                    pivot (SUM(valor_campo) 
                                    FOR NUMERO_CASILLA IN (12 AS "pivote",34 AS "credFiscalLocal",0 AS "crediFiscalExp"))                             
                                    )order by "NUMERO_DOCUMENTO" 
                                    )WHERE POS=1
                              
 ]]>
    </sql-query>
    
    <sql-query name="obtenerInformacionDocumento">
        <![CDATA[ 
            SELECT codigo_formulario AS "codigoFormulario",
                  numero_version         AS "numeroVersion",
                  numero_documento       AS "numeroDocumento",
                  anio_fiscal            AS "anioFiscal"
          FROM ba_declaraciones
          WHERE NIT=:pNit
          AND PERIODO_DESDE >=  TO_DATE(:pFechaDel,'DD/MM/YYYY') AND PERIODO_DESDE <= TO_DATE(:pFechaAl,'DD/MM/YYYY')
          AND codigo_formulario IN(201,204,223)
          ORDER BY FECHA_ADICION desc
        ]]>
    </sql-query>
    
    <sql-query name="obtenerInformesFinAuditoria">
        <![CDATA[ 
            SELECT  to_char(correlativo+1)                    as "correlativo",
                    to_char(fecha_carga,'dd/MM/yyyy HH24:mi') as "fechaCarga",
                    binaryfile                                as "archivo"
            FROM    fg_archivo_informe_fin_audit
            WHERE   nombramiento= :pNombramiento
        ]]>
    </sql-query>
    
    <sql-query name="obtenerDocumentosVerificacion">
        <![CDATA[ 
            SELECT      decode  (
                                    inconsistencia,
                                    1,'Documentos falsos',
                                    2,'Documentos autorizados pero con valor diferente',
                                    3,'Documentos que no fueron efectivamente pagados',
                                    4,'Proveedor no localizado',
                                    5,'No se encontraron desviaciones',
                                    6,'Declaración omisa',
                                    7,'Suspensión por resistencia',
                                    8,'Suspensión por fuerza mayor',
                                    9,'Factura especial'
                                )                                                           as "inconsistencia",
                        decode  (
                                    tipo_documento,
                                    'FC','Factura',
                                    'NC','Nota crédito',
                                    'ND','Nota débito',
                                    'AR','Acta por resistencia',
                                    'DP','Denuncia por pérdida de documentos'
                                )                                                           as "tipoDocumento",
                        serie_documento                                                     as "serie",
                        numero_documento                                                    as "documento",
                        to_char(fecha_documento,'dd/MM/yyyy')                               as "fechaDocumento",
                        to_char(nvl(monto_documento,0),'99G999G999G999G990D00')             as "total",
                        to_char(nvl(monto_documento_cruce,0),'99G999G999G999G990D00')       as "totalCruce",
                        to_char(fecha_grabacion,'dd/MM/yyyy')                               as "fechaCaptura"
            FROM        fi_resultado_documento
            WHERE       id_resultado=   (
                                            SELECT  id
                                            FROM    fi_resultados
                                            WHERE   nit= :pNitProveedor
                                            AND     id_padre=   (
                                                                    SELECT  id
                                                                    FROM    fi_resultados
                                                                    WHERE   nombramiento= :pNombramiento
                                                                )
                                        )
            AND         mes_periodo= :pMesPeriodo
            AND         anio_periodo= :pAnioPeriodo
            ORDER BY    fecha_documento DESC
        ]]>
    </sql-query>
    
    <sql-query name="obtenerTiposOperacionAduanas">
        <![CDATA[ 
            SELECT  to_char(codigo_tipo_operacion)  as "id",
                    descripcion                     as "descripcion"
            FROM    ad_tipos_operacion
            WHERE   estatus_borrado='N'
        ]]>
    </sql-query>
    
    <sql-query name="obtenerEstadosDua">
        <![CDATA[ 
            SELECT  cod_estado    as "id",
                    nombre_corto  as "descripcion"
            FROM    dua_estados
        ]]>
    </sql-query>
    
    <sql-query name="obtenerAduanas">
        <![CDATA[ 
            SELECT  cod_aduana||'~'||cod_localizacion as "id",
                    descripcion                       as "descripcion"
            FROM    dua_aduana
            WHERE   activo='S'
        ]]>
    </sql-query>
    
    <sql-query name="obtenerModalidadesPorRegimen">
        <![CDATA[ 
            SELECT      r.cod_regimen||'~'||m.cod_modalidad as "id",
                        r.descripcion||'~'||m.descripcion   as "descripcion"
            FROM        dua_modalidad m
            INNER JOIN  dua_regimenes r ON r.cod_regimen=m.cod_regimen
            WHERE       m.tipo_operacion=:pTipoOperacion
            AND         r.activo='S'
            AND         m.activo='S'
            ORDER BY    r.descripcion,m.descripcion
        ]]>
    </sql-query>
    
    <sql-query name="findAfiliacionesByNit">
        <![CDATA[ 
            SELECT      i.nombre_corto    as "nombreImpuesto",
                        r.nombre_regimen  as "nombreRegimen"
            FROM        rtu_afiliaciones a
            INNER JOIN  ba_impuestos i ON i.codigo_impuesto=a.codigo_impuesto
            INNER JOIN  rtu_regimenes r ON r.codigo_tipo=a.codigo_tipo AND r.codigo_impuesto=a.codigo_impuesto AND r.codigo_regimen=a.codigo_regimen
            WHERE       a.nit=:pNit
            AND         a.status='A'
        ]]>
    </sql-query>
    
    <sql-query name="findApoderadosByRepresentante">
        <![CDATA[ 
            SELECT      r.nit_representado                              as "nit",
                        initcap(SAT_RTU.PPRTU_CAMBIANOMBRE(c.nombre))   as "nombre",
                        to_char(r.fecha_nombramiento,'dd/MM/yyyy')      as "fechaNombramiento"
            FROM        rtu_representantes r
            INNER JOIN  sat_contribuyentes c ON c.nit=r.nit_representado
            WHERE       r.nit_representante=:pNit
            AND         r.status='A'
        ]]>
    </sql-query>
    
    <sql-query name="findAcreditamientosByNit">
        <![CDATA[ 
            SELECT      initcap(rr.nombre_regimen)
            FROM        rtu_afiliaciones a
            INNER JOIN  rtu_regimenes rr
            ON          rr.codigo_regimen   = a.codigo_regimen 
            AND         rr.codigo_impuesto  = a.codigo_impuesto
            AND         rr.codigo_tipo      = a.codigo_tipo
            WHERE       a.nit=:pNit
            AND         a.status='A'
            ORDER BY    1
        ]]>
    </sql-query>
    
    <sql-query name="findHistorialRiesgoInstitucional">
        <![CDATA[ 
            SELECT       
            INITCAP(ri.tipo_riesgo) AS "riesgo",
            ri.fecha_grabacion AS "vigenteAPartirDe",
            ri.anio AS "anioInformacionBase",
            ri.nit AS "nitContribuyente"
            FROM        riesgo_institucional ri
            WHERE       ri.nit=:pNit
            AND         ri.anio>=(SELECT TO_NUMBER(EXTRACT(YEAR FROM sysdate))-4 FROM dual)
            ORDER BY    ri.anio DESC, ri.fecha_grabacion desc NULLS LAST
        ]]>
    </sql-query>
    
    <sql-query name="findHistorialDCFRiesgoInstitucional">
        <![CDATA[ 
            SELECT      
            INITCAP(DECODE(ri.tipo_riesgo,'RIESGO NO DETERMINADO','RIESGO NO ESTABLECIDO',ri.tipo_riesgo)) AS "riesgo",
            ri.fecha_grabacion AS "vigenteAPartirDe",
            ri.anio AS "anioInformacionBase",
            ri.nit AS "nitContribuyente"
            FROM        sat_general.dcf_riesgo_institucional ri
            WHERE       ri.nit=:pNit
            AND         ri.anio>=(SELECT TO_NUMBER(EXTRACT(YEAR FROM sysdate))-4 FROM dual)
            ORDER BY    ri.anio DESC,ri.fecha_grabacion desc NULLS LAST
        ]]>
    </sql-query>

    <sql-query name="obtenerCodigoRegimenRiesgo">
        <![CDATA[ 
            SELECT
                MAX(REGIMEN) REGIMEN
            FROM
            (
              SELECT
                    1 REGIMEN,
                    1 ORDEN
                FROM
                    RIESGO_GRANDES_NORMALES GNRAL_NORMAL
                WHERE
                       NOT EXISTS ( SELECT 1 FROM RIESGO_DEV_CREDITO_FISCAL DEV WHERE DEV.NIT = GNRAL_NORMAL.NIT AND DEV.ANIO = GNRAL_NORMAL.ANIO)
                   AND NOT EXISTS ( SELECT 1 FROM RIESGO_EXENTOS EXENTO WHERE  EXENTO.NIT = GNRAL_NORMAL.NIT AND EXENTO.ANIO = GNRAL_NORMAL.ANIO)
                   AND NOT EXISTS ( SELECT 1 FROM RIESGO_PERFIL_DECRETO DECRETO WHERE DECRETO.NIT = GNRAL_NORMAL.NIT AND DECRETO.ANIO = GNRAL_NORMAL.ANIO)
                   AND GNRAL_NORMAL.NIT = :pNit
                   AND GNRAL_NORMAL.ANIO = :pAnio

                UNION

                SELECT
                    2 REGIMEN,
                    2 ORDEN                    
                FROM
                    RIESGO_DEV_CREDITO_FISCAL DEVOLUCION
                WHERE
                        DEVOLUCION.NIT = :pNit
                    AND DEVOLUCION.ANIO = :pAnio

                UNION

                SELECT
                    3 REGIMEN,
                    3 ORDEN
                FROM
                    RIESGO_PEQ_CONTRIBUYENTE PEQCONTRIB
                WHERE
                       PEQCONTRIB.NIT = :pNit   
                   AND PEQCONTRIB.ANIO = :pAnio

                UNION

                SELECT
                   4 REGIMEN,
                   4 ORDEN
                FROM
                    RIESGO_EXENTOS EXENTO
                WHERE
                       EXENTO.NIT = :pNit
                   AND EXENTO.ANIO = :pAnio
                   
                UNION

                SELECT
                   0 REGIMEN,
                   5 ORDEN
                FROM
                    DUAL
            ) 
        ]]>
        
    </sql-query>
    
    <sql-query name="obtenerSentenciaMapeoPorRegimen">
        <![CDATA[ 
            SELECT
                  'SELECT  '''|| DATOS.SIGNIFICADO|| ''' SIGNIFICADO, '''||  DATOS.EXPLICACION_COLOQUIAL || ''' EXPLICACION_COLOQUIAL,  '|| DATOS.SENTENCIA ||') VALOR FROM DUAL UNION' AS "sentenciaDetalleRiesgo"
              FROM
              (
                  SELECT
                      CONCEPTO.ID_CONCEPTO,
                      CONCEPTO.SIGNIFICADO,
                      CONCEPTO.EXPLICACION_COLOQUIAL,
                      MAPEO.COLUMNA,
                      TABLA.NOMBRE_TABLA,
                      '(SELECT '||MAPEO.COLUMNA ||' FROM '||TABLA.NOMBRE_TABLA||' WHERE NIT ='''||:pNit||''' AND ANIO =' ||:pAnio SENTENCIA 
                  FROM
                      RIESGO_TIPO_REGIMEN REGIMEN
                      INNER JOIN RIESGO_CONCEPTO CONCEPTO ON REGIMEN.ID_REGIMEN = CONCEPTO.ID_REGIMEN
                      INNER JOIN RIESGO_MAPEO_DETALLE MAPEO ON MAPEO.ID_REGIMEN = CONCEPTO.ID_REGIMEN AND MAPEO.ID_CONCEPTO = CONCEPTO.ID_CONCEPTO
                      INNER JOIN RIESGO_TABLA TABLA ON TABLA.ID_TABLA = MAPEO.ID_TABLA
                  WHERE
                      REGIMEN.ID_REGIMEN = :pRegimen  
              ) DATOS
        ]]>
    </sql-query>    
    
    <sql-query name="obtenerInfoContribuyenteByNit">
    <![CDATA[     
            SELECT a.nit as "nitContribuyente", 
                   a.nombre as "nombreContribuyente", 
                   c.descripcion as "clasificacionContribuyente", 
                   CASE WHEN b.region_sat = 'C' THEN 'CENTRAL' 
                   WHEN b.region_sat = 'O' THEN 'ORIENTE' 
                   WHEN b.region_sat = 'N' THEN 'NORTE' 
                   WHEN b.region_sat = 'S' THEN 'SUR' 
                   ELSE '' END as "regionContribuyente"
            FROM sat_contribuyentes a 
            INNER JOIN sat_departamentos b
            on a.codigo_departamento = b.codigo_departamento
            INNER JOIN rtu_catalogo_clasificaciones c 
            on c.codigo_clasificacion=a.clasificacion
            WHERE a.nit = :pNit
    ]]>            
    </sql-query>  
    
    <sql-query name="obtenerDescripcionesFormulario">
    <![CDATA[
            SELECT ID as "id",
                   ID_REPORTE as "idReporte" ,
                   DESCRIPCION as "descripcion",
                   OBSERVACIONES as "observaciones",
                   USUARIO_CREACION as "usuarioCreacion",
                   FECHA_CREACION as "fechaCreacion"
            FROM CIF_DECLARACIONES_PRESENTADAS 
            WHERE id_reporte = :id_reporte
    ]]>            
    </sql-query>  
    
    
    <sql-query name="obtenerEncabezadoPeqContribuyente">
    <![CDATA[
            SELECT a.nit as "nitContribuyente", 
                   a.nombre as "nombreContribuyente",
                   (a.calle_avenida ||' '|| a.numero_casa ||' '|| case when length(a.apartamento) >0 then 'Apto ' else ' ' end || a.apartamento ||' '||a.colonia || case when length(a.zona)>0 then ' Zona ' else '' end || a.zona) as "direccion",  
                    d.NOMBRE_ACTIVIDAD      as "nombreActividad",
                    a.DIRECCION_INVALIDA    as "direccionInvalida",
                    a.STATUS                as "status",
                    (
                    select TO_CHAR(fecha_cambio_regimen, 'DD/MM/YYYY')
                    From rtu_afiliaciones
                    where nit=a.NIT
                    and fecha_cambio_regimen = (select max(fecha_cambio_regimen) From rtu_afiliaciones where nit=a.NIT)
                    )                        as "fechaCambioRegimen",                   
                    (
                    select rg.nombre_regimen
                    From SAT_RTU.rtu_regimenes rg
                    where rg.codigo_regimen= (select codigo_regimen
                    From rtu_afiliaciones
                    where nit=a.NIT
                    and fecha_cambio_regimen = (select max(fecha_cambio_regimen) From rtu_afiliaciones where nit=a.NIT))



                    and rg.codigo_tipo= (select codigo_tipo
                    From rtu_afiliaciones
                    where nit=a.NIT
                    and fecha_cambio_regimen = (select max(fecha_cambio_regimen) From rtu_afiliaciones where nit=a.NIT))



                    and rg.fecha_adicion=(select max(fecha_adicion) from SAT_RTU.rtu_regimenes
                    where codigo_regimen = (select codigo_regimen
                    From rtu_afiliaciones
                    where nit=a.NIT
                    and fecha_cambio_regimen = (select max(fecha_cambio_regimen) From rtu_afiliaciones where nit=a.NIT))



                    and codigo_tipo= (select codigo_tipo
                    From rtu_afiliaciones
                    where nit=a.NIT
                    and fecha_cambio_regimen = (select max(fecha_cambio_regimen) From rtu_afiliaciones where nit=a.NIT)))
                    )                         as "nombreRegimen",
                   c.descripcion              as "clasificacion",
                  
                   CASE WHEN b.region_sat = 'C' THEN 'CENTRAL' 
                   WHEN b.region_sat = 'O' THEN 'ORIENTE' 
                   WHEN b.region_sat = 'N' THEN 'NORTE' 
                   WHEN b.region_sat = 'S' THEN 'SUR' 
                   ELSE '' END                 as "region"
                     FROM sat_contribuyentes a 
                     INNER JOIN sat_departamentos b
                     on a.codigo_departamento = b.codigo_departamento
                     INNER JOIN rtu_catalogo_clasificaciones c 
                     on c.codigo_clasificacion=a.clasificacion
                     LEFT JOIN RTU_ACTIVIDADES_CONTRIBUYENTES d
                     on a.CODIGO_ACTIVIDAD = d.CODIGO_ACTIVIDAD 
                     WHERE a.nit = :pNit
    ]]>            
    </sql-query> 
    
    <sql-query name="obtenerHistorialCargaTipologia">
    <![CDATA[
           SELECT 
            ID_CARGA                      AS "idCarga",
            NOMBRE_ARCHIVO                AS "nombreArchivo",
            FECHA_CARGA_REGISTRO          AS "fechaCargaRegistro",
            CANTIDAD_REGISTROS_CARGADOS   AS "cantidadRegistrosCargados",
            USUARIO_REGISTRO              AS "usuarioRegistro",
            DOCUMENTO_ARCHIVO             AS "documentoArchivo"
            FROM CIF_HISTORIAL_CARGAS
            ORDER BY   1
    ]]>            
    </sql-query> 
    
    <sql-query name="obtenerArchivoEspecifico">
         <![CDATA[
            SELECT 
            DOCUMENTO_ARCHIVO as "documentoArchivo"
            FROM CIF_HISTORIAL_CARGAS
            WHERE ID_CARGA = :idCarga
   ]]>            
    </sql-query> 
    
    <sql-query name="obtenerRegistro">
        <![CDATA[
           SELECT  
           COUNT(*)  as "cantidadRegistros"
           FROM  SAT_FISCALIZACION.CIF_TIPOLOGIAS_DE_EVASION
           WHERE NIT = :pNit   
           AND  ID_TIPOLOGIA = :idTipologia 
           AND ANIO_INFORMACION = :anioInformacion     
        ]]>
    </sql-query>  
    
    <sql-query name="obtenerCampoRepetidoNit">
        <![CDATA[
           SELECT  
           COUNT(*)  as "cantidadRegistros"
           FROM  SAT_FISCALIZACION.CIF_TIPOLOGIAS_DE_EVASION
           WHERE NIT = :pNit   
        ]]>
    </sql-query>  
    
    <sql-query name="obtenerCampoRepetidoIdTipologia">
        <![CDATA[
           SELECT  
           COUNT(*)  as "cantidadRegistros"
           FROM  SAT_FISCALIZACION.CIF_TIPOLOGIAS_DE_EVASION
           WHERE ID_TIPOLOGIA = :idTipologia 
        ]]>
    </sql-query>  
    
    <sql-query name="obtenerCampoRepetidoAnioInfo">
        <![CDATA[
           SELECT  
           COUNT(*)  as "cantidadRegistros"
           FROM  SAT_FISCALIZACION.CIF_TIPOLOGIAS_DE_EVASION
           WHERE  ANIO_INFORMACION = :anioInformacion     
        ]]>
    </sql-query>  
    
    <sql-query name="obtenerCampoRepetidoidCatalogoTipologias">
        <![CDATA[
           SELECT  
           COUNT(*)  as "cantidadRegistros"
           FROM  SAT_FISCALIZACION.CIF_CLASES_TIPOLOGIAS
           WHERE  ID_TIPOLOGIA = :idTipologia     
        ]]>
    </sql-query>  
    
    
    <sql-query name="obtenerHistorialCargaVerificaciones">
    <![CDATA[
           SELECT 
            ID_CARGA_CAMPO                AS "idCargaCampo",
            NOMBRE_ARCHIVO                AS "nombreArchivo",
            FECHA_CARGA_REGISTRO          AS "fechaCargaRegistro",
            CANTIDAD_REGISTROS_CARGADOS   AS "cantidadRegistrosCargados",
            USUARIO_REGISTRO              AS "usuarioRegistro",
            DOCUMENTO_ARCHIVO             AS "documentoArchivo"
            FROM CIF_CARGA_VERIFICACIONES_CAMPO
            ORDER BY   1
    ]]>            
    </sql-query> 
    
    <sql-query name="obtenerArchivoEspecificoVerificaciones">
         <![CDATA[
            SELECT 
            DOCUMENTO_ARCHIVO as "documentoArchivo"
            FROM CIF_CARGA_VERIFICACIONES_CAMPO
            WHERE ID_CARGA_CAMPO = :idCargaCampo
   ]]>            
    </sql-query> 
    
    
    <sql-query name="obtenerRegistroVerificaciones">
        <![CDATA[
          SELECT
          COUNT(*)  as "cantidadRegistros"
          FROM  SAT_FISCALIZACION.CIF_VERIFICACIONES_EN_CAMPO 
          WHERE NIT = :pNit
          AND  DIRECCION_VERIFICADA = :direccionVerificada
          AND DEPARTAMENTO = :departamento
          AND MUNICIPIO = :municipio
          AND TIPO_DIRECCION = :tipoDireccion
        ]]>
    </sql-query> 
    
    <sql-query name="obtenerCamposRepetidosNit">
        <![CDATA[
           SELECT  
           COUNT(*)  as "cantidadRegistros"
           FROM  SAT_FISCALIZACION.CIF_VERIFICACIONES_EN_CAMPO 
           WHERE NIT = :pNit 
        ]]>
    </sql-query>   
    
    <sql-query name="obtenerCamposRepetidosDireccion">
        <![CDATA[
           SELECT  
           COUNT(*)  as "cantidadRegistros"
           FROM  SAT_FISCALIZACION.CIF_VERIFICACIONES_EN_CAMPO 
           WHERE DIRECCION_VERIFICADA = :direccionVerificada

        ]]>
    </sql-query>  
    
    <sql-query name="obtenerCamposRepetidosDepartamentos">
        <![CDATA[
           SELECT  
           COUNT(*)  as "cantidadRegistros"
           FROM  SAT_FISCALIZACION.CIF_VERIFICACIONES_EN_CAMPO 
           WHERE  DEPARTAMENTO = :departamento

        ]]>
    </sql-query>  
    
    <sql-query name="obtenerCamposRepetidosMunicipio">
        <![CDATA[
           SELECT  
           COUNT(*)  as "cantidadRegistros"
           FROM  SAT_FISCALIZACION.CIF_VERIFICACIONES_EN_CAMPO 
           WHERE  MUNICIPIO = :municipio

        ]]>
    </sql-query> 
     
    <sql-query name="obtenerCamposRepetidosTipoDireccion">
        <![CDATA[
           SELECT  
           COUNT(*)  as "cantidadRegistros"
           FROM  SAT_FISCALIZACION.CIF_VERIFICACIONES_EN_CAMPO 
           WHERE  TIPO_DIRECCION = :tipoDireccion

        ]]>
    </sql-query> 
    
    <sql-query name="obtenerHistorialCargaTipologiaFechaHora">
    <![CDATA[
            select
            id_carga                        as "idCarga",
            nombre_archivo                  as "nombreArchivo",
            to_char(fecha_carga_registro, 'DD-MM-YYYY HH:MI:SS AM') as "fechaCargaRegistro" ,
            cantidad_registros_cargados     as  "cantidadRegistrosCargados",
            usuario_registro                as "usuarioRegistro",
            documento_archivo               as "documentoArchivo"
        from SAT_FISCALIZACION.CIF_HISTORIAL_CARGAS order by 1
    ]]>            
    </sql-query> 
    
    <sql-query name="obtenerHistorialCargaVerificacionesFechaHora">
    <![CDATA[
            select
            id_carga_campo                  as "idCargaCampo",
            nombre_archivo                  as "nombreArchivo",
            to_char(fecha_carga_registro, 'DD-MM-YYYY HH:MI:SS AM') as "fechaCargaRegistro" ,
            cantidad_registros_cargados     as  "cantidadRegistrosCargados",
            usuario_registro                as "usuarioRegistro",
            documento_archivo               as "documentoArchivo"
        from SAT_FISCALIZACION.CIF_CARGA_VERIFICACIONES_CAMPO order by 1

    ]]>            
    </sql-query> 
    
    
    <sql-query name="obtenerImpuestoISCV">
    <![CDATA[
            SELECT 
        SUM (
        impuesto +intereses+mora + impuesto_2005 + impuesto_2004 + impuesto_2003 + impuesto_2002 + impuesto_2001) as "impuesto" 
        from veh_pagos_nuevas_placas
        WHERE NIT = :pNit

    ]]>            
    </sql-query> 
    
    
    <sql-query name="procedimientoInfoVehiculos">
    <![CDATA[
                { CALL SAT_VEHICULOS.VEHICULOS_ACT_DEC7094(?) }

    ]]>            
    </sql-query> 
    
    <sql-query name="mostrarConsultaDeIndicadoresDetalle">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
			INNER JOIN SICT_INDICADORES_ENCABEZADO b
			ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit

        ]]>
    </sql-query>
    
    <sql-query name="mostrarIndicadoresDetalle">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR

        ]]>
    </sql-query>
	
	<sql-query name="mostrarespeciIndicadoresPorNombre">
        <![CDATA[
            SELECT
                a.ID_INDICADOR          as "idIndicador",
                a.SOLICITANTE           as "solicitante",
                a.USUARIO_ADICIONO      as "usuarioAdiciono",
                a.FECHA_ADICIONO        as "fechaAdiciono",
                a.ID_TIPO_INDICADORES   as "idTipoIndicadores",
                a.NOMBRE_INDICADOR      as "nombreIndicador",
                a.OBJETIVO              as "objetivo",
                a.IMPUESTO              as "impuesto",
                a.FORMULARIO            as "formulario",
                a.VERSION_F             as "versionF",
                a.NUMERADOR             as "numerador",
                a.DENOMINADOR           as "denominador",
                a.FORMULA_APLICAR       as "formulaAplicar",
                a.CRITERIOS_DEPURACION  as "criteriosDepuracion",
                a.MED_TEN_CENT_APL      as "medTenCentApl",
                a.ID_FORMA_PRESENTACION as "idFormaDePresentacion",
                a.NUMERO_DECIMALES      as "numeroDecimales",
                a.CRITERIO_SEMAFORO     as "criterioSemaforo",
                a.ROJO                  as "rojo",
                a.AMARILLO              as "amarillo",
                a.DOCUMENTO             as "documento",
                a.DOCUMENTO_ARCHIVO     as "documentoPdf",
                a.MOTIVO_EDICION        as "motivoEdicion",
                a.ID_ESTADO             as "idEstados",
                a.MOTIVO_INACTIVACION   as "motivoInactivacion",
                b.DESCRIPCION           as "tipoindDescripcion",
                c.DESCRIPCION           as "nombreEstado"
           FROM SICT_INDICADORES a
           INNER JOIN SICT_TIPO_INDICADORES b
           ON a.ID_TIPO_INDICADORES  = b.ID_TIPO_INDICADORES
           INNER JOIN SICT_ESTADOS c
           ON a.ID_ESTADO=c.ID_ESTADO
           WHERE ID_INDICADOR  = :idIndicador
            
        ]]>
    </sql-query>
	
	 <sql-query name="mostrarConsultaIndDetalleNitColorAnio">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
            AND COLOR = :color
            AND ANIO = :anio
           
        ]]>
    </sql-query>
	
	<sql-query name="mostrarConsultaIndDetalleNitColor">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
            AND COLOR = :color
           
        ]]>
    </sql-query>
	
	<sql-query name="mostrarConsultaIndDetalleNitAnio">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
            AND ANIO = :anio
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleVacia">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
			AND TIPO_INDICADOR = :tipoIndicador
			AND SECTOR_ECONOMICO = :sectorEconomico
            AND COLOR = :color
			AND REGION = :region
            AND ANIO = :anio
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleNitIndicadorSectorColorRegionAnioClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
			AND TIPO_INDICADOR = :tipoIndicador
			AND SECTOR_ECONOMICO = :sectorEconomico
            AND COLOR = :color
			AND REGION = :region
            AND ANIO = :anio
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    
    <sql-query name="mostrarConsultaIndDetalleNitIndicadorSectorColorRegionAnio">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
			AND TIPO_INDICADOR = :tipoIndicador
			AND SECTOR_ECONOMICO = :sectorEconomico
            AND COLOR = :color
			AND REGION = :region
            AND ANIO = :anio
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleNitIndicadorSectorColorRegion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
			AND TIPO_INDICADOR = :tipoIndicador
			AND SECTOR_ECONOMICO = :sectorEconomico
            AND COLOR = :color
			AND REGION = :region
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleNitIndicadorSectorColor">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
			AND TIPO_INDICADOR = :tipoIndicador
			AND SECTOR_ECONOMICO = :sectorEconomico
            AND COLOR = :color
           
        ]]>
    </sql-query>
    
    
    <sql-query name="mostrarConsultaIndDetalleNitIndicadorSector">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
			AND TIPO_INDICADOR = :tipoIndicador
			AND SECTOR_ECONOMICO = :sectorEconomico
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleNitTipoIndicador">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
			AND TIPO_INDICADOR = :tipoIndicador
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleNitSectorEconomico">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
			AND SECTOR_ECONOMICO = :sectorEconomico
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleNitRegion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
			AND REGION = :region
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleNitClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleNitIndicadorColor">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
                        AND TIPO_INDICADOR = :tipoIndicador
			AND COLOR = :color
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleNitIndicadorColorAnio">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
                        AND TIPO_INDICADOR = :tipoIndicador
			AND COLOR = :color
                        AND ANIO  = :anio
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleNitIndicadorColorAnioSector">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
                        AND TIPO_INDICADOR = :tipoIndicador
			AND COLOR = :color
                        AND ANIO  = :anio
                        AND SECTOR_ECONOMICO  = :sectorEconomico
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleNitIndicadorColorAnioSectorRegion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE NIT = :pNit
                        AND TIPO_INDICADOR = :tipoIndicador
			AND COLOR = :color
                        AND ANIO  = :anio
                        AND SECTOR_ECONOMICO  = :sectorEconomico
                        AND REGION  = :region
           
        ]]>
    </sql-query>
	
	<sql-query name="mostrarConsultaIndDetallePorTipoIndicador">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorColor">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE COLOR = :color
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorAnio">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE ANIO = :anio
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorSectorEconomico">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE SECTOR_ECONOMICO = :sectorEconomico
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorRegion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE REGION = :region
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorTipoIndicadorColor">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
			AND COLOR = :color
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorTipoIndicadorAnio">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
			AND ANIO = :anio
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorTipoIndicadorSector">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
			AND SECTOR_ECONOMICO = :sectorEconomico
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorTipoIndicadorRegion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
			AND REGION = :region
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorTipoIndicadorClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorColorAnio">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE COLOR = :color
			AND ANIO = :anio
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorColorSector">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE COLOR = :color
			AND SECTOR_ECONOMICO = :sectorEconomico
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorColorRegion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE COLOR = :color
			AND REGION = :region
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorColorClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE COLOR = :color
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorAnioSector">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE ANIO = :anio
			AND SECTOR_ECONOMICO = :sectorEconomico
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorAnioRegion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE ANIO = :anio
			AND REGION = :region
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorAnioClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE ANIO = :anio
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorSectorRegion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE SECTOR_ECONOMICO = :sectorEconomico
			AND REGION = :region
           
        ]]>
    </sql-query>
    
    
    <sql-query name="mostrarConsultaIndDetallePorSectorClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE SECTOR_ECONOMICO = :sectorEconomico
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetallePorRegionClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE REGION = :region
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleIndicadorSectorColorRegionAnioClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
			AND SECTOR_ECONOMICO = :sectorEconomico
            AND COLOR = :color
			AND REGION = :region
            AND ANIO = :anio
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleIndicadorColorAnio">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
            AND COLOR = :color
            AND ANIO = :anio
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleIndicadorColorSector">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
            AND COLOR = :color
            AND SECTOR_ECONOMICO = :sectorEconomico
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleIndicadorColorRegion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
            AND COLOR = :color
            AND REGION = :region
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleIndicadorColorClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
            AND COLOR = :color
            AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleColorAnioSector">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE COLOR = :color
            AND ANIO = :anio
			AND SECTOR_ECONOMICO = :sectorEconomico
           
        ]]>
    </sql-query>
	
	<sql-query name="mostrarConsultaIndDetalleColorAnioRegion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE COLOR = :color
            AND ANIO = :anio
			AND REGION = :region
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleColorAnioClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE COLOR = :color
            AND ANIO = :anio
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleAnioSectorRegion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE ANIO = :anio
			AND SECTOR_ECONOMICO = :sectorEconomico
			AND REGION = :region
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleAnioSectorClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE ANIO = :anio
			AND SECTOR_ECONOMICO = :sectorEconomico
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
	
   <sql-query name="mostrarConsultaIndDetalleSectorRegionClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE SECTOR_ECONOMICO = :sectorEconomico
			AND REGION = :region
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleTipoIndicadorColorAnioSect">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
			AND COLOR = :color
			AND ANIO = :anio
			AND SECTOR_ECONOMICO = :sectorEconomico
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleTipoIndicadorColorAnioRegion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
			AND COLOR = :color
			AND ANIO = :anio
			AND REGION = :region
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleTipoIndicadorColorAnioClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
			AND COLOR = :color
			AND ANIO = :anio
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleTipoIndicadorColorAnioSecRegion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
			AND COLOR = :color
			AND ANIO = :anio
			AND SECTOR_ECONOMICO = :sectorEconomico
			AND REGION = :region
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarConsultaIndDetalleTipoIndicadorColorAnioSecClasificacion">
        <![CDATA[
        
            SELECT 
                a.ID_INDICADORES_CALCULADOS   AS    "idIndicadoresCalculados",
                a.ID_INDICADOR                AS    "idIndicador",
                a.NIT                         AS    "nit",
                a.NOMBRE_CONTR_INS            AS    "nombreContrIns",
		a.CLASIFICACION               AS    "clasificacion",
		a.REGION      		      AS    "region",
		a.SECTOR_ECONOMICO	      AS    "sectorEconomico",
                a.ANIO                        AS    "anio",
                a.NUMERADOR                   AS    "numerador",
                a.DENOMINADOR                 AS    "denominador",
                a.COEFICIENTE                 AS    "coeficiente",
                a.COEFICIENTE_SECTOR_ECO      AS    "coeficienteSectorEco",
                a.MODA_SECTOR_EC              AS    "modaSectorEc",
                a.MODA_GENERAL                AS    "modaGeneral",
                a.MEDIANA_GENERAL             AS    "medianaGeneral",
                a.COLOR                       AS    "color",
		a.TIPO_INDICADOR	      AS    "tipoIndicador",
		b.NOMBRE_INDICADOR            AS    "nombreIndicador",
                b.NOMBRE_CORTO_INDICADOR      AS    "nombreCortoIndicador",
                b.DATOS_NUMERADOR             AS    "datosNumerador",
                b.DATOS_DENOMINADOR           AS    "datosDenominador", 
                b.IMPUESTO                    AS    "impuesto",
                b.PERIODO_INICIO              AS    "periodoInicio",
                b.PERIODO_FIN                 AS    "periodoFin"
            FROM SICT_INDICADORES_CALCULADOS a
            INNER JOIN SICT_INDICADORES_ENCABEZADO b
	    ON a.ID_INDICADOR  = b.ID_INDICADOR
            WHERE TIPO_INDICADOR = :tipoIndicador
			AND COLOR = :color
			AND ANIO = :anio
			AND SECTOR_ECONOMICO = :sectorEconomico
			AND CLASIFICACION = :clasificacion
           
        ]]>
    </sql-query>
    
    <sql-query name="mostrarNombreContribuyente">
        <![CDATA[
        
            SELECT 
                NOMBRE_CONTR_INS   AS    "nombreContrIns"
            FROM SICT_INDICADORES_CALCULADOS
            WHERE NIT = :pNit AND ROWNUM = 1
           
        ]]>
    </sql-query>
    
      <sql-query name="obtenerConteoDeclaracionesAduanerasByAnioNit">
        <![CDATA[
        select
            nvl(SUM(count(*)),'0') as "cantidad_declaraciones",
            nvl(to_char(SUM(monto_fob) , '99G999G999G999G990D00'),'0') as "fob_suma",
            nvl(to_char(SUM(monto_cif), '99G999G999G999G990D00'),'0') as "cif_suma"
          from
            (
            SELECT 
                 nvl(nvl(d.total_fob_dolares, 0)* nvl(d.valor_tipo_cambio, 0), 0) as monto_fob,
                   (SELECT nvl(nvl(da.valor_quetzales, 0)+nvl(da.valor_seguros, 0)+nvl(da.valor_fletes, 0)+nvl(da.valor_otros_gastos, 0), 0)
                    FROM ad_declaraciones_aduaneras da
                    WHERE da.codigo_agente||da.numero_declaracion=d.numero_orden ) as monto_cif
                          FROM
                    (SELECT *
                     FROM dua_poliza p
                     WHERE NOT EXISTS
                             (SELECT 1
                                  FROM ad_rectificaciones ar
                                  WHERE ar.codigo_agente_original=p.agente_orden
                                    AND ar.numero_declaracion_original=substr(p.numero_orden, 4) ) ) d
                          WHERE d.documento_beneficiario= :pNit
                                  AND  extract(YEAR from d.fecha_aceptacion) = :pAnio
            ) tabla_subconsulta
          group by 
            monto_fob,
            monto_cif
        ]]>
    </sql-query>   
</hibernate-mapping>